/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 23.0, "minX": 0.0, "maxY": 4251.0, "series": [{"data": [[0.0, 42.0], [0.1, 42.0], [0.2, 42.0], [0.3, 42.0], [0.4, 42.0], [0.5, 47.0], [0.6, 47.0], [0.7, 47.0], [0.8, 47.0], [0.9, 47.0], [1.0, 47.0], [1.1, 47.0], [1.2, 47.0], [1.3, 47.0], [1.4, 47.0], [1.5, 49.0], [1.6, 49.0], [1.7, 49.0], [1.8, 49.0], [1.9, 49.0], [2.0, 54.0], [2.1, 54.0], [2.2, 54.0], [2.3, 54.0], [2.4, 54.0], [2.5, 55.0], [2.6, 55.0], [2.7, 55.0], [2.8, 55.0], [2.9, 55.0], [3.0, 57.0], [3.1, 57.0], [3.2, 57.0], [3.3, 57.0], [3.4, 57.0], [3.5, 62.0], [3.6, 62.0], [3.7, 62.0], [3.8, 62.0], [3.9, 62.0], [4.0, 63.0], [4.1, 63.0], [4.2, 63.0], [4.3, 63.0], [4.4, 63.0], [4.5, 63.0], [4.6, 63.0], [4.7, 63.0], [4.8, 63.0], [4.9, 63.0], [5.0, 65.0], [5.1, 65.0], [5.2, 65.0], [5.3, 65.0], [5.4, 65.0], [5.5, 66.0], [5.6, 66.0], [5.7, 66.0], [5.8, 66.0], [5.9, 66.0], [6.0, 74.0], [6.1, 74.0], [6.2, 74.0], [6.3, 74.0], [6.4, 74.0], [6.5, 75.0], [6.6, 75.0], [6.7, 75.0], [6.8, 75.0], [6.9, 75.0], [7.0, 77.0], [7.1, 77.0], [7.2, 77.0], [7.3, 77.0], [7.4, 77.0], [7.5, 77.0], [7.6, 77.0], [7.7, 77.0], [7.8, 77.0], [7.9, 77.0], [8.0, 79.0], [8.1, 79.0], [8.2, 79.0], [8.3, 79.0], [8.4, 79.0], [8.5, 80.0], [8.6, 80.0], [8.7, 80.0], [8.8, 80.0], [8.9, 80.0], [9.0, 81.0], [9.1, 81.0], [9.2, 81.0], [9.3, 81.0], [9.4, 81.0], [9.5, 95.0], [9.6, 95.0], [9.7, 95.0], [9.8, 95.0], [9.9, 95.0], [10.0, 101.0], [10.1, 101.0], [10.2, 101.0], [10.3, 101.0], [10.4, 101.0], [10.5, 104.0], [10.6, 104.0], [10.7, 104.0], [10.8, 104.0], [10.9, 104.0], [11.0, 108.0], [11.1, 108.0], [11.2, 108.0], [11.3, 108.0], [11.4, 108.0], [11.5, 119.0], [11.6, 119.0], [11.7, 119.0], [11.8, 119.0], [11.9, 119.0], [12.0, 120.0], [12.1, 120.0], [12.2, 120.0], [12.3, 120.0], [12.4, 120.0], [12.5, 132.0], [12.6, 132.0], [12.7, 132.0], [12.8, 132.0], [12.9, 132.0], [13.0, 165.0], [13.1, 165.0], [13.2, 165.0], [13.3, 165.0], [13.4, 165.0], [13.5, 172.0], [13.6, 172.0], [13.7, 172.0], [13.8, 172.0], [13.9, 172.0], [14.0, 176.0], [14.1, 176.0], [14.2, 176.0], [14.3, 176.0], [14.4, 176.0], [14.5, 180.0], [14.6, 180.0], [14.7, 180.0], [14.8, 180.0], [14.9, 180.0], [15.0, 200.0], [15.1, 200.0], [15.2, 200.0], [15.3, 200.0], [15.4, 200.0], [15.5, 203.0], [15.6, 203.0], [15.7, 203.0], [15.8, 203.0], [15.9, 203.0], [16.0, 204.0], [16.1, 204.0], [16.2, 204.0], [16.3, 204.0], [16.4, 204.0], [16.5, 217.0], [16.6, 217.0], [16.7, 217.0], [16.8, 217.0], [16.9, 217.0], [17.0, 219.0], [17.1, 219.0], [17.2, 219.0], [17.3, 219.0], [17.4, 219.0], [17.5, 231.0], [17.6, 231.0], [17.7, 231.0], [17.8, 231.0], [17.9, 231.0], [18.0, 252.0], [18.1, 252.0], [18.2, 252.0], [18.3, 252.0], [18.4, 252.0], [18.5, 261.0], [18.6, 261.0], [18.7, 261.0], [18.8, 261.0], [18.9, 261.0], [19.0, 267.0], [19.1, 267.0], [19.2, 267.0], [19.3, 267.0], [19.4, 267.0], [19.5, 271.0], [19.6, 271.0], [19.7, 271.0], [19.8, 271.0], [19.9, 271.0], [20.0, 278.0], [20.1, 278.0], [20.2, 278.0], [20.3, 278.0], [20.4, 278.0], [20.5, 290.0], [20.6, 290.0], [20.7, 290.0], [20.8, 290.0], [20.9, 290.0], [21.0, 298.0], [21.1, 298.0], [21.2, 298.0], [21.3, 298.0], [21.4, 298.0], [21.5, 301.0], [21.6, 301.0], [21.7, 301.0], [21.8, 301.0], [21.9, 301.0], [22.0, 312.0], [22.1, 312.0], [22.2, 312.0], [22.3, 312.0], [22.4, 312.0], [22.5, 313.0], [22.6, 313.0], [22.7, 313.0], [22.8, 313.0], [22.9, 313.0], [23.0, 330.0], [23.1, 330.0], [23.2, 330.0], [23.3, 330.0], [23.4, 330.0], [23.5, 346.0], [23.6, 346.0], [23.7, 346.0], [23.8, 346.0], [23.9, 346.0], [24.0, 347.0], [24.1, 347.0], [24.2, 347.0], [24.3, 347.0], [24.4, 347.0], [24.5, 348.0], [24.6, 348.0], [24.7, 348.0], [24.8, 348.0], [24.9, 348.0], [25.0, 350.0], [25.1, 350.0], [25.2, 350.0], [25.3, 350.0], [25.4, 350.0], [25.5, 361.0], [25.6, 361.0], [25.7, 361.0], [25.8, 361.0], [25.9, 361.0], [26.0, 376.0], [26.1, 376.0], [26.2, 376.0], [26.3, 376.0], [26.4, 376.0], [26.5, 376.0], [26.6, 376.0], [26.7, 376.0], [26.8, 376.0], [26.9, 376.0], [27.0, 383.0], [27.1, 383.0], [27.2, 383.0], [27.3, 383.0], [27.4, 383.0], [27.5, 387.0], [27.6, 387.0], [27.7, 387.0], [27.8, 387.0], [27.9, 387.0], [28.0, 399.0], [28.1, 399.0], [28.2, 399.0], [28.3, 399.0], [28.4, 399.0], [28.5, 426.0], [28.6, 426.0], [28.7, 426.0], [28.8, 426.0], [28.9, 426.0], [29.0, 432.0], [29.1, 432.0], [29.2, 432.0], [29.3, 432.0], [29.4, 432.0], [29.5, 432.0], [29.6, 432.0], [29.7, 432.0], [29.8, 432.0], [29.9, 432.0], [30.0, 433.0], [30.1, 433.0], [30.2, 433.0], [30.3, 433.0], [30.4, 433.0], [30.5, 436.0], [30.6, 436.0], [30.7, 436.0], [30.8, 436.0], [30.9, 436.0], [31.0, 445.0], [31.1, 445.0], [31.2, 445.0], [31.3, 445.0], [31.4, 445.0], [31.5, 451.0], [31.6, 451.0], [31.7, 451.0], [31.8, 451.0], [31.9, 451.0], [32.0, 455.0], [32.1, 455.0], [32.2, 455.0], [32.3, 455.0], [32.4, 455.0], [32.5, 463.0], [32.6, 463.0], [32.7, 463.0], [32.8, 463.0], [32.9, 463.0], [33.0, 468.0], [33.1, 468.0], [33.2, 468.0], [33.3, 468.0], [33.4, 468.0], [33.5, 481.0], [33.6, 481.0], [33.7, 481.0], [33.8, 481.0], [33.9, 481.0], [34.0, 491.0], [34.1, 491.0], [34.2, 491.0], [34.3, 491.0], [34.4, 491.0], [34.5, 496.0], [34.6, 496.0], [34.7, 496.0], [34.8, 496.0], [34.9, 496.0], [35.0, 500.0], [35.1, 500.0], [35.2, 500.0], [35.3, 500.0], [35.4, 500.0], [35.5, 501.0], [35.6, 501.0], [35.7, 501.0], [35.8, 501.0], [35.9, 501.0], [36.0, 501.0], [36.1, 501.0], [36.2, 501.0], [36.3, 501.0], [36.4, 501.0], [36.5, 501.0], [36.6, 501.0], [36.7, 501.0], [36.8, 501.0], [36.9, 501.0], [37.0, 504.0], [37.1, 504.0], [37.2, 504.0], [37.3, 504.0], [37.4, 504.0], [37.5, 506.0], [37.6, 506.0], [37.7, 506.0], [37.8, 506.0], [37.9, 506.0], [38.0, 515.0], [38.1, 515.0], [38.2, 515.0], [38.3, 515.0], [38.4, 515.0], [38.5, 530.0], [38.6, 530.0], [38.7, 530.0], [38.8, 530.0], [38.9, 530.0], [39.0, 536.0], [39.1, 536.0], [39.2, 536.0], [39.3, 536.0], [39.4, 536.0], [39.5, 539.0], [39.6, 539.0], [39.7, 539.0], [39.8, 539.0], [39.9, 539.0], [40.0, 540.0], [40.1, 540.0], [40.2, 540.0], [40.3, 540.0], [40.4, 540.0], [40.5, 546.0], [40.6, 546.0], [40.7, 546.0], [40.8, 546.0], [40.9, 546.0], [41.0, 548.0], [41.1, 548.0], [41.2, 548.0], [41.3, 548.0], [41.4, 548.0], [41.5, 552.0], [41.6, 552.0], [41.7, 552.0], [41.8, 552.0], [41.9, 552.0], [42.0, 554.0], [42.1, 554.0], [42.2, 554.0], [42.3, 554.0], [42.4, 554.0], [42.5, 556.0], [42.6, 556.0], [42.7, 556.0], [42.8, 556.0], [42.9, 556.0], [43.0, 568.0], [43.1, 568.0], [43.2, 568.0], [43.3, 568.0], [43.4, 568.0], [43.5, 575.0], [43.6, 575.0], [43.7, 575.0], [43.8, 575.0], [43.9, 575.0], [44.0, 579.0], [44.1, 579.0], [44.2, 579.0], [44.3, 579.0], [44.4, 579.0], [44.5, 585.0], [44.6, 585.0], [44.7, 585.0], [44.8, 585.0], [44.9, 585.0], [45.0, 589.0], [45.1, 589.0], [45.2, 589.0], [45.3, 589.0], [45.4, 589.0], [45.5, 594.0], [45.6, 594.0], [45.7, 594.0], [45.8, 594.0], [45.9, 594.0], [46.0, 597.0], [46.1, 597.0], [46.2, 597.0], [46.3, 597.0], [46.4, 597.0], [46.5, 600.0], [46.6, 600.0], [46.7, 600.0], [46.8, 600.0], [46.9, 600.0], [47.0, 603.0], [47.1, 603.0], [47.2, 603.0], [47.3, 603.0], [47.4, 603.0], [47.5, 620.0], [47.6, 620.0], [47.7, 620.0], [47.8, 620.0], [47.9, 620.0], [48.0, 624.0], [48.1, 624.0], [48.2, 624.0], [48.3, 624.0], [48.4, 624.0], [48.5, 628.0], [48.6, 628.0], [48.7, 628.0], [48.8, 628.0], [48.9, 628.0], [49.0, 631.0], [49.1, 631.0], [49.2, 631.0], [49.3, 631.0], [49.4, 631.0], [49.5, 649.0], [49.6, 649.0], [49.7, 649.0], [49.8, 649.0], [49.9, 649.0], [50.0, 650.0], [50.1, 650.0], [50.2, 650.0], [50.3, 650.0], [50.4, 650.0], [50.5, 662.0], [50.6, 662.0], [50.7, 662.0], [50.8, 662.0], [50.9, 662.0], [51.0, 668.0], [51.1, 668.0], [51.2, 668.0], [51.3, 668.0], [51.4, 668.0], [51.5, 679.0], [51.6, 679.0], [51.7, 679.0], [51.8, 679.0], [51.9, 679.0], [52.0, 680.0], [52.1, 680.0], [52.2, 680.0], [52.3, 680.0], [52.4, 680.0], [52.5, 701.0], [52.6, 701.0], [52.7, 701.0], [52.8, 701.0], [52.9, 701.0], [53.0, 709.0], [53.1, 709.0], [53.2, 709.0], [53.3, 709.0], [53.4, 709.0], [53.5, 712.0], [53.6, 712.0], [53.7, 712.0], [53.8, 712.0], [53.9, 712.0], [54.0, 715.0], [54.1, 715.0], [54.2, 715.0], [54.3, 715.0], [54.4, 715.0], [54.5, 716.0], [54.6, 716.0], [54.7, 716.0], [54.8, 716.0], [54.9, 716.0], [55.0, 744.0], [55.1, 744.0], [55.2, 744.0], [55.3, 744.0], [55.4, 744.0], [55.5, 752.0], [55.6, 752.0], [55.7, 752.0], [55.8, 752.0], [55.9, 752.0], [56.0, 759.0], [56.1, 759.0], [56.2, 759.0], [56.3, 759.0], [56.4, 759.0], [56.5, 770.0], [56.6, 770.0], [56.7, 770.0], [56.8, 770.0], [56.9, 770.0], [57.0, 771.0], [57.1, 771.0], [57.2, 771.0], [57.3, 771.0], [57.4, 771.0], [57.5, 787.0], [57.6, 787.0], [57.7, 787.0], [57.8, 787.0], [57.9, 787.0], [58.0, 791.0], [58.1, 791.0], [58.2, 791.0], [58.3, 791.0], [58.4, 791.0], [58.5, 794.0], [58.6, 794.0], [58.7, 794.0], [58.8, 794.0], [58.9, 794.0], [59.0, 815.0], [59.1, 815.0], [59.2, 815.0], [59.3, 815.0], [59.4, 815.0], [59.5, 835.0], [59.6, 835.0], [59.7, 835.0], [59.8, 835.0], [59.9, 835.0], [60.0, 837.0], [60.1, 837.0], [60.2, 837.0], [60.3, 837.0], [60.4, 837.0], [60.5, 851.0], [60.6, 851.0], [60.7, 851.0], [60.8, 851.0], [60.9, 851.0], [61.0, 880.0], [61.1, 880.0], [61.2, 880.0], [61.3, 880.0], [61.4, 880.0], [61.5, 882.0], [61.6, 882.0], [61.7, 882.0], [61.8, 882.0], [61.9, 882.0], [62.0, 890.0], [62.1, 890.0], [62.2, 890.0], [62.3, 890.0], [62.4, 890.0], [62.5, 898.0], [62.6, 898.0], [62.7, 898.0], [62.8, 898.0], [62.9, 898.0], [63.0, 911.0], [63.1, 911.0], [63.2, 911.0], [63.3, 911.0], [63.4, 911.0], [63.5, 914.0], [63.6, 914.0], [63.7, 914.0], [63.8, 914.0], [63.9, 914.0], [64.0, 917.0], [64.1, 917.0], [64.2, 917.0], [64.3, 917.0], [64.4, 917.0], [64.5, 918.0], [64.6, 918.0], [64.7, 918.0], [64.8, 918.0], [64.9, 918.0], [65.0, 921.0], [65.1, 921.0], [65.2, 921.0], [65.3, 921.0], [65.4, 921.0], [65.5, 928.0], [65.6, 928.0], [65.7, 928.0], [65.8, 928.0], [65.9, 928.0], [66.0, 931.0], [66.1, 931.0], [66.2, 931.0], [66.3, 931.0], [66.4, 931.0], [66.5, 933.0], [66.6, 933.0], [66.7, 933.0], [66.8, 933.0], [66.9, 933.0], [67.0, 943.0], [67.1, 943.0], [67.2, 943.0], [67.3, 943.0], [67.4, 943.0], [67.5, 952.0], [67.6, 952.0], [67.7, 952.0], [67.8, 952.0], [67.9, 952.0], [68.0, 966.0], [68.1, 966.0], [68.2, 966.0], [68.3, 966.0], [68.4, 966.0], [68.5, 967.0], [68.6, 967.0], [68.7, 967.0], [68.8, 967.0], [68.9, 967.0], [69.0, 968.0], [69.1, 968.0], [69.2, 968.0], [69.3, 968.0], [69.4, 968.0], [69.5, 982.0], [69.6, 982.0], [69.7, 982.0], [69.8, 982.0], [69.9, 982.0], [70.0, 991.0], [70.1, 991.0], [70.2, 991.0], [70.3, 991.0], [70.4, 991.0], [70.5, 992.0], [70.6, 992.0], [70.7, 992.0], [70.8, 992.0], [70.9, 992.0], [71.0, 1007.0], [71.1, 1007.0], [71.2, 1007.0], [71.3, 1007.0], [71.4, 1007.0], [71.5, 1017.0], [71.6, 1017.0], [71.7, 1017.0], [71.8, 1017.0], [71.9, 1017.0], [72.0, 1020.0], [72.1, 1020.0], [72.2, 1020.0], [72.3, 1020.0], [72.4, 1020.0], [72.5, 1028.0], [72.6, 1028.0], [72.7, 1028.0], [72.8, 1028.0], [72.9, 1028.0], [73.0, 1033.0], [73.1, 1033.0], [73.2, 1033.0], [73.3, 1033.0], [73.4, 1033.0], [73.5, 1070.0], [73.6, 1070.0], [73.7, 1070.0], [73.8, 1070.0], [73.9, 1070.0], [74.0, 1087.0], [74.1, 1087.0], [74.2, 1087.0], [74.3, 1087.0], [74.4, 1087.0], [74.5, 1114.0], [74.6, 1114.0], [74.7, 1114.0], [74.8, 1114.0], [74.9, 1114.0], [75.0, 1134.0], [75.1, 1134.0], [75.2, 1134.0], [75.3, 1134.0], [75.4, 1134.0], [75.5, 1162.0], [75.6, 1162.0], [75.7, 1162.0], [75.8, 1162.0], [75.9, 1162.0], [76.0, 1189.0], [76.1, 1189.0], [76.2, 1189.0], [76.3, 1189.0], [76.4, 1189.0], [76.5, 1214.0], [76.6, 1214.0], [76.7, 1214.0], [76.8, 1214.0], [76.9, 1214.0], [77.0, 1216.0], [77.1, 1216.0], [77.2, 1216.0], [77.3, 1216.0], [77.4, 1216.0], [77.5, 1230.0], [77.6, 1230.0], [77.7, 1230.0], [77.8, 1230.0], [77.9, 1230.0], [78.0, 1238.0], [78.1, 1238.0], [78.2, 1238.0], [78.3, 1238.0], [78.4, 1238.0], [78.5, 1265.0], [78.6, 1265.0], [78.7, 1265.0], [78.8, 1265.0], [78.9, 1265.0], [79.0, 1276.0], [79.1, 1276.0], [79.2, 1276.0], [79.3, 1276.0], [79.4, 1276.0], [79.5, 1323.0], [79.6, 1323.0], [79.7, 1323.0], [79.8, 1323.0], [79.9, 1323.0], [80.0, 1324.0], [80.1, 1324.0], [80.2, 1324.0], [80.3, 1324.0], [80.4, 1324.0], [80.5, 1364.0], [80.6, 1364.0], [80.7, 1364.0], [80.8, 1364.0], [80.9, 1364.0], [81.0, 1385.0], [81.1, 1385.0], [81.2, 1385.0], [81.3, 1385.0], [81.4, 1385.0], [81.5, 1389.0], [81.6, 1389.0], [81.7, 1389.0], [81.8, 1389.0], [81.9, 1389.0], [82.0, 1404.0], [82.1, 1404.0], [82.2, 1404.0], [82.3, 1404.0], [82.4, 1404.0], [82.5, 1406.0], [82.6, 1406.0], [82.7, 1406.0], [82.8, 1406.0], [82.9, 1406.0], [83.0, 1412.0], [83.1, 1412.0], [83.2, 1412.0], [83.3, 1412.0], [83.4, 1412.0], [83.5, 1422.0], [83.6, 1422.0], [83.7, 1422.0], [83.8, 1422.0], [83.9, 1422.0], [84.0, 1433.0], [84.1, 1433.0], [84.2, 1433.0], [84.3, 1433.0], [84.4, 1433.0], [84.5, 1442.0], [84.6, 1442.0], [84.7, 1442.0], [84.8, 1442.0], [84.9, 1442.0], [85.0, 1489.0], [85.1, 1489.0], [85.2, 1489.0], [85.3, 1489.0], [85.4, 1489.0], [85.5, 1503.0], [85.6, 1503.0], [85.7, 1503.0], [85.8, 1503.0], [85.9, 1503.0], [86.0, 1562.0], [86.1, 1562.0], [86.2, 1562.0], [86.3, 1562.0], [86.4, 1562.0], [86.5, 1677.0], [86.6, 1677.0], [86.7, 1677.0], [86.8, 1677.0], [86.9, 1677.0], [87.0, 1696.0], [87.1, 1696.0], [87.2, 1696.0], [87.3, 1696.0], [87.4, 1696.0], [87.5, 1716.0], [87.6, 1716.0], [87.7, 1716.0], [87.8, 1716.0], [87.9, 1716.0], [88.0, 1830.0], [88.1, 1830.0], [88.2, 1830.0], [88.3, 1830.0], [88.4, 1830.0], [88.5, 1839.0], [88.6, 1839.0], [88.7, 1839.0], [88.8, 1839.0], [88.9, 1839.0], [89.0, 1930.0], [89.1, 1930.0], [89.2, 1930.0], [89.3, 1930.0], [89.4, 1930.0], [89.5, 1966.0], [89.6, 1966.0], [89.7, 1966.0], [89.8, 1966.0], [89.9, 1966.0], [90.0, 1977.0], [90.1, 1977.0], [90.2, 1977.0], [90.3, 1977.0], [90.4, 1977.0], [90.5, 1995.0], [90.6, 1995.0], [90.7, 1995.0], [90.8, 1995.0], [90.9, 1995.0], [91.0, 2005.0], [91.1, 2005.0], [91.2, 2005.0], [91.3, 2005.0], [91.4, 2005.0], [91.5, 2037.0], [91.6, 2037.0], [91.7, 2037.0], [91.8, 2037.0], [91.9, 2037.0], [92.0, 2064.0], [92.1, 2064.0], [92.2, 2064.0], [92.3, 2064.0], [92.4, 2064.0], [92.5, 2264.0], [92.6, 2264.0], [92.7, 2264.0], [92.8, 2264.0], [92.9, 2264.0], [93.0, 2266.0], [93.1, 2266.0], [93.2, 2266.0], [93.3, 2266.0], [93.4, 2266.0], [93.5, 2269.0], [93.6, 2269.0], [93.7, 2269.0], [93.8, 2269.0], [93.9, 2269.0], [94.0, 2317.0], [94.1, 2317.0], [94.2, 2317.0], [94.3, 2317.0], [94.4, 2317.0], [94.5, 2327.0], [94.6, 2327.0], [94.7, 2327.0], [94.8, 2327.0], [94.9, 2327.0], [95.0, 2360.0], [95.1, 2360.0], [95.2, 2360.0], [95.3, 2360.0], [95.4, 2360.0], [95.5, 2419.0], [95.6, 2419.0], [95.7, 2419.0], [95.8, 2419.0], [95.9, 2419.0], [96.0, 2433.0], [96.1, 2433.0], [96.2, 2433.0], [96.3, 2433.0], [96.4, 2433.0], [96.5, 2440.0], [96.6, 2440.0], [96.7, 2440.0], [96.8, 2440.0], [96.9, 2440.0], [97.0, 2489.0], [97.1, 2489.0], [97.2, 2489.0], [97.3, 2489.0], [97.4, 2489.0], [97.5, 2731.0], [97.6, 2731.0], [97.7, 2731.0], [97.8, 2731.0], [97.9, 2731.0], [98.0, 2891.0], [98.1, 2891.0], [98.2, 2891.0], [98.3, 2891.0], [98.4, 2891.0], [98.5, 3089.0], [98.6, 3089.0], [98.7, 3089.0], [98.8, 3089.0], [98.9, 3089.0], [99.0, 3256.0], [99.1, 3256.0], [99.2, 3256.0], [99.3, 3256.0], [99.4, 3256.0], [99.5, 3340.0], [99.6, 3340.0], [99.7, 3340.0], [99.8, 3340.0], [99.9, 3340.0]], "isOverall": false, "label": "Criação de pedidos", "isController": false}, {"data": [[0.0, 25.0], [0.1, 25.0], [0.2, 25.0], [0.3, 25.0], [0.4, 25.0], [0.5, 25.0], [0.6, 25.0], [0.7, 25.0], [0.8, 25.0], [0.9, 25.0], [1.0, 33.0], [1.1, 33.0], [1.2, 33.0], [1.3, 33.0], [1.4, 33.0], [1.5, 34.0], [1.6, 34.0], [1.7, 34.0], [1.8, 34.0], [1.9, 34.0], [2.0, 36.0], [2.1, 36.0], [2.2, 36.0], [2.3, 36.0], [2.4, 36.0], [2.5, 37.0], [2.6, 37.0], [2.7, 37.0], [2.8, 37.0], [2.9, 37.0], [3.0, 38.0], [3.1, 38.0], [3.2, 38.0], [3.3, 38.0], [3.4, 38.0], [3.5, 38.0], [3.6, 38.0], [3.7, 38.0], [3.8, 38.0], [3.9, 38.0], [4.0, 39.0], [4.1, 39.0], [4.2, 39.0], [4.3, 39.0], [4.4, 39.0], [4.5, 39.0], [4.6, 39.0], [4.7, 39.0], [4.8, 39.0], [4.9, 39.0], [5.0, 44.0], [5.1, 44.0], [5.2, 44.0], [5.3, 44.0], [5.4, 44.0], [5.5, 45.0], [5.6, 45.0], [5.7, 45.0], [5.8, 45.0], [5.9, 45.0], [6.0, 47.0], [6.1, 47.0], [6.2, 47.0], [6.3, 47.0], [6.4, 47.0], [6.5, 49.0], [6.6, 49.0], [6.7, 49.0], [6.8, 49.0], [6.9, 49.0], [7.0, 52.0], [7.1, 52.0], [7.2, 52.0], [7.3, 52.0], [7.4, 52.0], [7.5, 53.0], [7.6, 53.0], [7.7, 53.0], [7.8, 53.0], [7.9, 53.0], [8.0, 58.0], [8.1, 58.0], [8.2, 58.0], [8.3, 58.0], [8.4, 58.0], [8.5, 66.0], [8.6, 66.0], [8.7, 66.0], [8.8, 66.0], [8.9, 66.0], [9.0, 69.0], [9.1, 69.0], [9.2, 69.0], [9.3, 69.0], [9.4, 69.0], [9.5, 70.0], [9.6, 70.0], [9.7, 70.0], [9.8, 70.0], [9.9, 70.0], [10.0, 76.0], [10.1, 76.0], [10.2, 76.0], [10.3, 76.0], [10.4, 76.0], [10.5, 79.0], [10.6, 79.0], [10.7, 79.0], [10.8, 79.0], [10.9, 79.0], [11.0, 82.0], [11.1, 82.0], [11.2, 82.0], [11.3, 82.0], [11.4, 82.0], [11.5, 105.0], [11.6, 105.0], [11.7, 105.0], [11.8, 105.0], [11.9, 105.0], [12.0, 108.0], [12.1, 108.0], [12.2, 108.0], [12.3, 108.0], [12.4, 108.0], [12.5, 123.0], [12.6, 123.0], [12.7, 123.0], [12.8, 123.0], [12.9, 123.0], [13.0, 126.0], [13.1, 126.0], [13.2, 126.0], [13.3, 126.0], [13.4, 126.0], [13.5, 127.0], [13.6, 127.0], [13.7, 127.0], [13.8, 127.0], [13.9, 127.0], [14.0, 127.0], [14.1, 127.0], [14.2, 127.0], [14.3, 127.0], [14.4, 127.0], [14.5, 132.0], [14.6, 132.0], [14.7, 132.0], [14.8, 132.0], [14.9, 132.0], [15.0, 144.0], [15.1, 144.0], [15.2, 144.0], [15.3, 144.0], [15.4, 144.0], [15.5, 169.0], [15.6, 169.0], [15.7, 169.0], [15.8, 169.0], [15.9, 169.0], [16.0, 169.0], [16.1, 169.0], [16.2, 169.0], [16.3, 169.0], [16.4, 169.0], [16.5, 180.0], [16.6, 180.0], [16.7, 180.0], [16.8, 180.0], [16.9, 180.0], [17.0, 204.0], [17.1, 204.0], [17.2, 204.0], [17.3, 204.0], [17.4, 204.0], [17.5, 208.0], [17.6, 208.0], [17.7, 208.0], [17.8, 208.0], [17.9, 208.0], [18.0, 235.0], [18.1, 235.0], [18.2, 235.0], [18.3, 235.0], [18.4, 235.0], [18.5, 238.0], [18.6, 238.0], [18.7, 238.0], [18.8, 238.0], [18.9, 238.0], [19.0, 249.0], [19.1, 249.0], [19.2, 249.0], [19.3, 249.0], [19.4, 249.0], [19.5, 259.0], [19.6, 259.0], [19.7, 259.0], [19.8, 259.0], [19.9, 259.0], [20.0, 271.0], [20.1, 271.0], [20.2, 271.0], [20.3, 271.0], [20.4, 271.0], [20.5, 300.0], [20.6, 300.0], [20.7, 300.0], [20.8, 300.0], [20.9, 300.0], [21.0, 305.0], [21.1, 305.0], [21.2, 305.0], [21.3, 305.0], [21.4, 305.0], [21.5, 327.0], [21.6, 327.0], [21.7, 327.0], [21.8, 327.0], [21.9, 327.0], [22.0, 328.0], [22.1, 328.0], [22.2, 328.0], [22.3, 328.0], [22.4, 328.0], [22.5, 339.0], [22.6, 339.0], [22.7, 339.0], [22.8, 339.0], [22.9, 339.0], [23.0, 341.0], [23.1, 341.0], [23.2, 341.0], [23.3, 341.0], [23.4, 341.0], [23.5, 345.0], [23.6, 345.0], [23.7, 345.0], [23.8, 345.0], [23.9, 345.0], [24.0, 364.0], [24.1, 364.0], [24.2, 364.0], [24.3, 364.0], [24.4, 364.0], [24.5, 382.0], [24.6, 382.0], [24.7, 382.0], [24.8, 382.0], [24.9, 382.0], [25.0, 383.0], [25.1, 383.0], [25.2, 383.0], [25.3, 383.0], [25.4, 383.0], [25.5, 384.0], [25.6, 384.0], [25.7, 384.0], [25.8, 384.0], [25.9, 384.0], [26.0, 391.0], [26.1, 391.0], [26.2, 391.0], [26.3, 391.0], [26.4, 391.0], [26.5, 396.0], [26.6, 396.0], [26.7, 396.0], [26.8, 396.0], [26.9, 396.0], [27.0, 412.0], [27.1, 412.0], [27.2, 412.0], [27.3, 412.0], [27.4, 412.0], [27.5, 416.0], [27.6, 416.0], [27.7, 416.0], [27.8, 416.0], [27.9, 416.0], [28.0, 436.0], [28.1, 436.0], [28.2, 436.0], [28.3, 436.0], [28.4, 436.0], [28.5, 443.0], [28.6, 443.0], [28.7, 443.0], [28.8, 443.0], [28.9, 443.0], [29.0, 452.0], [29.1, 452.0], [29.2, 452.0], [29.3, 452.0], [29.4, 452.0], [29.5, 456.0], [29.6, 456.0], [29.7, 456.0], [29.8, 456.0], [29.9, 456.0], [30.0, 462.0], [30.1, 462.0], [30.2, 462.0], [30.3, 462.0], [30.4, 462.0], [30.5, 467.0], [30.6, 467.0], [30.7, 467.0], [30.8, 467.0], [30.9, 467.0], [31.0, 469.0], [31.1, 469.0], [31.2, 469.0], [31.3, 469.0], [31.4, 469.0], [31.5, 505.0], [31.6, 505.0], [31.7, 505.0], [31.8, 505.0], [31.9, 505.0], [32.0, 516.0], [32.1, 516.0], [32.2, 516.0], [32.3, 516.0], [32.4, 516.0], [32.5, 518.0], [32.6, 518.0], [32.7, 518.0], [32.8, 518.0], [32.9, 518.0], [33.0, 528.0], [33.1, 528.0], [33.2, 528.0], [33.3, 528.0], [33.4, 528.0], [33.5, 528.0], [33.6, 528.0], [33.7, 528.0], [33.8, 528.0], [33.9, 528.0], [34.0, 539.0], [34.1, 539.0], [34.2, 539.0], [34.3, 539.0], [34.4, 539.0], [34.5, 556.0], [34.6, 556.0], [34.7, 556.0], [34.8, 556.0], [34.9, 556.0], [35.0, 563.0], [35.1, 563.0], [35.2, 563.0], [35.3, 563.0], [35.4, 563.0], [35.5, 577.0], [35.6, 577.0], [35.7, 577.0], [35.8, 577.0], [35.9, 577.0], [36.0, 579.0], [36.1, 579.0], [36.2, 579.0], [36.3, 579.0], [36.4, 579.0], [36.5, 584.0], [36.6, 584.0], [36.7, 584.0], [36.8, 584.0], [36.9, 584.0], [37.0, 597.0], [37.1, 597.0], [37.2, 597.0], [37.3, 597.0], [37.4, 597.0], [37.5, 601.0], [37.6, 601.0], [37.7, 601.0], [37.8, 601.0], [37.9, 601.0], [38.0, 605.0], [38.1, 605.0], [38.2, 605.0], [38.3, 605.0], [38.4, 605.0], [38.5, 606.0], [38.6, 606.0], [38.7, 606.0], [38.8, 606.0], [38.9, 606.0], [39.0, 615.0], [39.1, 615.0], [39.2, 615.0], [39.3, 615.0], [39.4, 615.0], [39.5, 621.0], [39.6, 621.0], [39.7, 621.0], [39.8, 621.0], [39.9, 621.0], [40.0, 681.0], [40.1, 681.0], [40.2, 681.0], [40.3, 681.0], [40.4, 681.0], [40.5, 699.0], [40.6, 699.0], [40.7, 699.0], [40.8, 699.0], [40.9, 699.0], [41.0, 700.0], [41.1, 700.0], [41.2, 700.0], [41.3, 700.0], [41.4, 700.0], [41.5, 701.0], [41.6, 701.0], [41.7, 701.0], [41.8, 701.0], [41.9, 701.0], [42.0, 704.0], [42.1, 704.0], [42.2, 704.0], [42.3, 704.0], [42.4, 704.0], [42.5, 708.0], [42.6, 708.0], [42.7, 708.0], [42.8, 708.0], [42.9, 708.0], [43.0, 710.0], [43.1, 710.0], [43.2, 710.0], [43.3, 710.0], [43.4, 710.0], [43.5, 716.0], [43.6, 716.0], [43.7, 716.0], [43.8, 716.0], [43.9, 716.0], [44.0, 721.0], [44.1, 721.0], [44.2, 721.0], [44.3, 721.0], [44.4, 721.0], [44.5, 746.0], [44.6, 746.0], [44.7, 746.0], [44.8, 746.0], [44.9, 746.0], [45.0, 762.0], [45.1, 762.0], [45.2, 762.0], [45.3, 762.0], [45.4, 762.0], [45.5, 764.0], [45.6, 764.0], [45.7, 764.0], [45.8, 764.0], [45.9, 764.0], [46.0, 774.0], [46.1, 774.0], [46.2, 774.0], [46.3, 774.0], [46.4, 774.0], [46.5, 785.0], [46.6, 785.0], [46.7, 785.0], [46.8, 785.0], [46.9, 785.0], [47.0, 785.0], [47.1, 785.0], [47.2, 785.0], [47.3, 785.0], [47.4, 785.0], [47.5, 789.0], [47.6, 789.0], [47.7, 789.0], [47.8, 789.0], [47.9, 789.0], [48.0, 795.0], [48.1, 795.0], [48.2, 795.0], [48.3, 795.0], [48.4, 795.0], [48.5, 809.0], [48.6, 809.0], [48.7, 809.0], [48.8, 809.0], [48.9, 809.0], [49.0, 827.0], [49.1, 827.0], [49.2, 827.0], [49.3, 827.0], [49.4, 827.0], [49.5, 844.0], [49.6, 844.0], [49.7, 844.0], [49.8, 844.0], [49.9, 844.0], [50.0, 855.0], [50.1, 855.0], [50.2, 855.0], [50.3, 855.0], [50.4, 855.0], [50.5, 864.0], [50.6, 864.0], [50.7, 864.0], [50.8, 864.0], [50.9, 864.0], [51.0, 882.0], [51.1, 882.0], [51.2, 882.0], [51.3, 882.0], [51.4, 882.0], [51.5, 884.0], [51.6, 884.0], [51.7, 884.0], [51.8, 884.0], [51.9, 884.0], [52.0, 899.0], [52.1, 899.0], [52.2, 899.0], [52.3, 899.0], [52.4, 899.0], [52.5, 901.0], [52.6, 901.0], [52.7, 901.0], [52.8, 901.0], [52.9, 901.0], [53.0, 912.0], [53.1, 912.0], [53.2, 912.0], [53.3, 912.0], [53.4, 912.0], [53.5, 913.0], [53.6, 913.0], [53.7, 913.0], [53.8, 913.0], [53.9, 913.0], [54.0, 931.0], [54.1, 931.0], [54.2, 931.0], [54.3, 931.0], [54.4, 931.0], [54.5, 942.0], [54.6, 942.0], [54.7, 942.0], [54.8, 942.0], [54.9, 942.0], [55.0, 943.0], [55.1, 943.0], [55.2, 943.0], [55.3, 943.0], [55.4, 943.0], [55.5, 952.0], [55.6, 952.0], [55.7, 952.0], [55.8, 952.0], [55.9, 952.0], [56.0, 960.0], [56.1, 960.0], [56.2, 960.0], [56.3, 960.0], [56.4, 960.0], [56.5, 976.0], [56.6, 976.0], [56.7, 976.0], [56.8, 976.0], [56.9, 976.0], [57.0, 979.0], [57.1, 979.0], [57.2, 979.0], [57.3, 979.0], [57.4, 979.0], [57.5, 985.0], [57.6, 985.0], [57.7, 985.0], [57.8, 985.0], [57.9, 985.0], [58.0, 1000.0], [58.1, 1000.0], [58.2, 1000.0], [58.3, 1000.0], [58.4, 1000.0], [58.5, 1009.0], [58.6, 1009.0], [58.7, 1009.0], [58.8, 1009.0], [58.9, 1009.0], [59.0, 1018.0], [59.1, 1018.0], [59.2, 1018.0], [59.3, 1018.0], [59.4, 1018.0], [59.5, 1018.0], [59.6, 1018.0], [59.7, 1018.0], [59.8, 1018.0], [59.9, 1018.0], [60.0, 1027.0], [60.1, 1027.0], [60.2, 1027.0], [60.3, 1027.0], [60.4, 1027.0], [60.5, 1036.0], [60.6, 1036.0], [60.7, 1036.0], [60.8, 1036.0], [60.9, 1036.0], [61.0, 1050.0], [61.1, 1050.0], [61.2, 1050.0], [61.3, 1050.0], [61.4, 1050.0], [61.5, 1054.0], [61.6, 1054.0], [61.7, 1054.0], [61.8, 1054.0], [61.9, 1054.0], [62.0, 1058.0], [62.1, 1058.0], [62.2, 1058.0], [62.3, 1058.0], [62.4, 1058.0], [62.5, 1075.0], [62.6, 1075.0], [62.7, 1075.0], [62.8, 1075.0], [62.9, 1075.0], [63.0, 1075.0], [63.1, 1075.0], [63.2, 1075.0], [63.3, 1075.0], [63.4, 1075.0], [63.5, 1077.0], [63.6, 1077.0], [63.7, 1077.0], [63.8, 1077.0], [63.9, 1077.0], [64.0, 1139.0], [64.1, 1139.0], [64.2, 1139.0], [64.3, 1139.0], [64.4, 1139.0], [64.5, 1139.0], [64.6, 1139.0], [64.7, 1139.0], [64.8, 1139.0], [64.9, 1139.0], [65.0, 1139.0], [65.1, 1139.0], [65.2, 1139.0], [65.3, 1139.0], [65.4, 1139.0], [65.5, 1174.0], [65.6, 1174.0], [65.7, 1174.0], [65.8, 1174.0], [65.9, 1174.0], [66.0, 1191.0], [66.1, 1191.0], [66.2, 1191.0], [66.3, 1191.0], [66.4, 1191.0], [66.5, 1226.0], [66.6, 1226.0], [66.7, 1226.0], [66.8, 1226.0], [66.9, 1226.0], [67.0, 1239.0], [67.1, 1239.0], [67.2, 1239.0], [67.3, 1239.0], [67.4, 1239.0], [67.5, 1248.0], [67.6, 1248.0], [67.7, 1248.0], [67.8, 1248.0], [67.9, 1248.0], [68.0, 1255.0], [68.1, 1255.0], [68.2, 1255.0], [68.3, 1255.0], [68.4, 1255.0], [68.5, 1271.0], [68.6, 1271.0], [68.7, 1271.0], [68.8, 1271.0], [68.9, 1271.0], [69.0, 1300.0], [69.1, 1300.0], [69.2, 1300.0], [69.3, 1300.0], [69.4, 1300.0], [69.5, 1315.0], [69.6, 1315.0], [69.7, 1315.0], [69.8, 1315.0], [69.9, 1315.0], [70.0, 1326.0], [70.1, 1326.0], [70.2, 1326.0], [70.3, 1326.0], [70.4, 1326.0], [70.5, 1336.0], [70.6, 1336.0], [70.7, 1336.0], [70.8, 1336.0], [70.9, 1336.0], [71.0, 1339.0], [71.1, 1339.0], [71.2, 1339.0], [71.3, 1339.0], [71.4, 1339.0], [71.5, 1354.0], [71.6, 1354.0], [71.7, 1354.0], [71.8, 1354.0], [71.9, 1354.0], [72.0, 1356.0], [72.1, 1356.0], [72.2, 1356.0], [72.3, 1356.0], [72.4, 1356.0], [72.5, 1381.0], [72.6, 1381.0], [72.7, 1381.0], [72.8, 1381.0], [72.9, 1381.0], [73.0, 1389.0], [73.1, 1389.0], [73.2, 1389.0], [73.3, 1389.0], [73.4, 1389.0], [73.5, 1430.0], [73.6, 1430.0], [73.7, 1430.0], [73.8, 1430.0], [73.9, 1430.0], [74.0, 1447.0], [74.1, 1447.0], [74.2, 1447.0], [74.3, 1447.0], [74.4, 1447.0], [74.5, 1475.0], [74.6, 1475.0], [74.7, 1475.0], [74.8, 1475.0], [74.9, 1475.0], [75.0, 1481.0], [75.1, 1481.0], [75.2, 1481.0], [75.3, 1481.0], [75.4, 1481.0], [75.5, 1483.0], [75.6, 1483.0], [75.7, 1483.0], [75.8, 1483.0], [75.9, 1483.0], [76.0, 1529.0], [76.1, 1529.0], [76.2, 1529.0], [76.3, 1529.0], [76.4, 1529.0], [76.5, 1534.0], [76.6, 1534.0], [76.7, 1534.0], [76.8, 1534.0], [76.9, 1534.0], [77.0, 1547.0], [77.1, 1547.0], [77.2, 1547.0], [77.3, 1547.0], [77.4, 1547.0], [77.5, 1576.0], [77.6, 1576.0], [77.7, 1576.0], [77.8, 1576.0], [77.9, 1576.0], [78.0, 1582.0], [78.1, 1582.0], [78.2, 1582.0], [78.3, 1582.0], [78.4, 1582.0], [78.5, 1589.0], [78.6, 1589.0], [78.7, 1589.0], [78.8, 1589.0], [78.9, 1589.0], [79.0, 1613.0], [79.1, 1613.0], [79.2, 1613.0], [79.3, 1613.0], [79.4, 1613.0], [79.5, 1691.0], [79.6, 1691.0], [79.7, 1691.0], [79.8, 1691.0], [79.9, 1691.0], [80.0, 1816.0], [80.1, 1816.0], [80.2, 1816.0], [80.3, 1816.0], [80.4, 1816.0], [80.5, 1820.0], [80.6, 1820.0], [80.7, 1820.0], [80.8, 1820.0], [80.9, 1820.0], [81.0, 1827.0], [81.1, 1827.0], [81.2, 1827.0], [81.3, 1827.0], [81.4, 1827.0], [81.5, 1858.0], [81.6, 1858.0], [81.7, 1858.0], [81.8, 1858.0], [81.9, 1858.0], [82.0, 1930.0], [82.1, 1930.0], [82.2, 1930.0], [82.3, 1930.0], [82.4, 1930.0], [82.5, 1941.0], [82.6, 1941.0], [82.7, 1941.0], [82.8, 1941.0], [82.9, 1941.0], [83.0, 1956.0], [83.1, 1956.0], [83.2, 1956.0], [83.3, 1956.0], [83.4, 1956.0], [83.5, 1977.0], [83.6, 1977.0], [83.7, 1977.0], [83.8, 1977.0], [83.9, 1977.0], [84.0, 1984.0], [84.1, 1984.0], [84.2, 1984.0], [84.3, 1984.0], [84.4, 1984.0], [84.5, 2004.0], [84.6, 2004.0], [84.7, 2004.0], [84.8, 2004.0], [84.9, 2004.0], [85.0, 2054.0], [85.1, 2054.0], [85.2, 2054.0], [85.3, 2054.0], [85.4, 2054.0], [85.5, 2068.0], [85.6, 2068.0], [85.7, 2068.0], [85.8, 2068.0], [85.9, 2068.0], [86.0, 2128.0], [86.1, 2128.0], [86.2, 2128.0], [86.3, 2128.0], [86.4, 2128.0], [86.5, 2144.0], [86.6, 2144.0], [86.7, 2144.0], [86.8, 2144.0], [86.9, 2144.0], [87.0, 2158.0], [87.1, 2158.0], [87.2, 2158.0], [87.3, 2158.0], [87.4, 2158.0], [87.5, 2175.0], [87.6, 2175.0], [87.7, 2175.0], [87.8, 2175.0], [87.9, 2175.0], [88.0, 2194.0], [88.1, 2194.0], [88.2, 2194.0], [88.3, 2194.0], [88.4, 2194.0], [88.5, 2240.0], [88.6, 2240.0], [88.7, 2240.0], [88.8, 2240.0], [88.9, 2240.0], [89.0, 2246.0], [89.1, 2246.0], [89.2, 2246.0], [89.3, 2246.0], [89.4, 2246.0], [89.5, 2291.0], [89.6, 2291.0], [89.7, 2291.0], [89.8, 2291.0], [89.9, 2291.0], [90.0, 2297.0], [90.1, 2297.0], [90.2, 2297.0], [90.3, 2297.0], [90.4, 2297.0], [90.5, 2344.0], [90.6, 2344.0], [90.7, 2344.0], [90.8, 2344.0], [90.9, 2344.0], [91.0, 2359.0], [91.1, 2359.0], [91.2, 2359.0], [91.3, 2359.0], [91.4, 2359.0], [91.5, 2361.0], [91.6, 2361.0], [91.7, 2361.0], [91.8, 2361.0], [91.9, 2361.0], [92.0, 2363.0], [92.1, 2363.0], [92.2, 2363.0], [92.3, 2363.0], [92.4, 2363.0], [92.5, 2376.0], [92.6, 2376.0], [92.7, 2376.0], [92.8, 2376.0], [92.9, 2376.0], [93.0, 2386.0], [93.1, 2386.0], [93.2, 2386.0], [93.3, 2386.0], [93.4, 2386.0], [93.5, 2407.0], [93.6, 2407.0], [93.7, 2407.0], [93.8, 2407.0], [93.9, 2407.0], [94.0, 2408.0], [94.1, 2408.0], [94.2, 2408.0], [94.3, 2408.0], [94.4, 2408.0], [94.5, 2475.0], [94.6, 2475.0], [94.7, 2475.0], [94.8, 2475.0], [94.9, 2475.0], [95.0, 2601.0], [95.1, 2601.0], [95.2, 2601.0], [95.3, 2601.0], [95.4, 2601.0], [95.5, 2658.0], [95.6, 2658.0], [95.7, 2658.0], [95.8, 2658.0], [95.9, 2658.0], [96.0, 2679.0], [96.1, 2679.0], [96.2, 2679.0], [96.3, 2679.0], [96.4, 2679.0], [96.5, 2682.0], [96.6, 2682.0], [96.7, 2682.0], [96.8, 2682.0], [96.9, 2682.0], [97.0, 2691.0], [97.1, 2691.0], [97.2, 2691.0], [97.3, 2691.0], [97.4, 2691.0], [97.5, 2761.0], [97.6, 2761.0], [97.7, 2761.0], [97.8, 2761.0], [97.9, 2761.0], [98.0, 2785.0], [98.1, 2785.0], [98.2, 2785.0], [98.3, 2785.0], [98.4, 2785.0], [98.5, 2825.0], [98.6, 2825.0], [98.7, 2825.0], [98.8, 2825.0], [98.9, 2825.0], [99.0, 3209.0], [99.1, 3209.0], [99.2, 3209.0], [99.3, 3209.0], [99.4, 3209.0], [99.5, 4251.0], [99.6, 4251.0], [99.7, 4251.0], [99.8, 4251.0], [99.9, 4251.0]], "isOverall": false, "label": "Listar restaurantes", "isController": false}, {"data": [[0.0, 23.0], [0.1, 23.0], [0.2, 23.0], [0.3, 23.0], [0.4, 23.0], [0.5, 24.0], [0.6, 24.0], [0.7, 24.0], [0.8, 24.0], [0.9, 24.0], [1.0, 28.0], [1.1, 28.0], [1.2, 28.0], [1.3, 28.0], [1.4, 28.0], [1.5, 30.0], [1.6, 30.0], [1.7, 30.0], [1.8, 30.0], [1.9, 30.0], [2.0, 31.0], [2.1, 31.0], [2.2, 31.0], [2.3, 31.0], [2.4, 31.0], [2.5, 35.0], [2.6, 35.0], [2.7, 35.0], [2.8, 35.0], [2.9, 35.0], [3.0, 37.0], [3.1, 37.0], [3.2, 37.0], [3.3, 37.0], [3.4, 37.0], [3.5, 38.0], [3.6, 38.0], [3.7, 38.0], [3.8, 38.0], [3.9, 38.0], [4.0, 41.0], [4.1, 41.0], [4.2, 41.0], [4.3, 41.0], [4.4, 41.0], [4.5, 43.0], [4.6, 43.0], [4.7, 43.0], [4.8, 43.0], [4.9, 43.0], [5.0, 45.0], [5.1, 45.0], [5.2, 45.0], [5.3, 45.0], [5.4, 45.0], [5.5, 47.0], [5.6, 47.0], [5.7, 47.0], [5.8, 47.0], [5.9, 47.0], [6.0, 49.0], [6.1, 49.0], [6.2, 49.0], [6.3, 49.0], [6.4, 49.0], [6.5, 60.0], [6.6, 60.0], [6.7, 60.0], [6.8, 60.0], [6.9, 60.0], [7.0, 61.0], [7.1, 61.0], [7.2, 61.0], [7.3, 61.0], [7.4, 61.0], [7.5, 74.0], [7.6, 74.0], [7.7, 74.0], [7.8, 74.0], [7.9, 74.0], [8.0, 90.0], [8.1, 90.0], [8.2, 90.0], [8.3, 90.0], [8.4, 90.0], [8.5, 91.0], [8.6, 91.0], [8.7, 91.0], [8.8, 91.0], [8.9, 91.0], [9.0, 93.0], [9.1, 93.0], [9.2, 93.0], [9.3, 93.0], [9.4, 93.0], [9.5, 95.0], [9.6, 95.0], [9.7, 95.0], [9.8, 95.0], [9.9, 95.0], [10.0, 96.0], [10.1, 96.0], [10.2, 96.0], [10.3, 96.0], [10.4, 96.0], [10.5, 102.0], [10.6, 102.0], [10.7, 102.0], [10.8, 102.0], [10.9, 102.0], [11.0, 105.0], [11.1, 105.0], [11.2, 105.0], [11.3, 105.0], [11.4, 105.0], [11.5, 110.0], [11.6, 110.0], [11.7, 110.0], [11.8, 110.0], [11.9, 110.0], [12.0, 111.0], [12.1, 111.0], [12.2, 111.0], [12.3, 111.0], [12.4, 111.0], [12.5, 111.0], [12.6, 111.0], [12.7, 111.0], [12.8, 111.0], [12.9, 111.0], [13.0, 112.0], [13.1, 112.0], [13.2, 112.0], [13.3, 112.0], [13.4, 112.0], [13.5, 118.0], [13.6, 118.0], [13.7, 118.0], [13.8, 118.0], [13.9, 118.0], [14.0, 122.0], [14.1, 122.0], [14.2, 122.0], [14.3, 122.0], [14.4, 122.0], [14.5, 123.0], [14.6, 123.0], [14.7, 123.0], [14.8, 123.0], [14.9, 123.0], [15.0, 125.0], [15.1, 125.0], [15.2, 125.0], [15.3, 125.0], [15.4, 125.0], [15.5, 129.0], [15.6, 129.0], [15.7, 129.0], [15.8, 129.0], [15.9, 129.0], [16.0, 135.0], [16.1, 135.0], [16.2, 135.0], [16.3, 135.0], [16.4, 135.0], [16.5, 140.0], [16.6, 140.0], [16.7, 140.0], [16.8, 140.0], [16.9, 140.0], [17.0, 143.0], [17.1, 143.0], [17.2, 143.0], [17.3, 143.0], [17.4, 143.0], [17.5, 145.0], [17.6, 145.0], [17.7, 145.0], [17.8, 145.0], [17.9, 145.0], [18.0, 147.0], [18.1, 147.0], [18.2, 147.0], [18.3, 147.0], [18.4, 147.0], [18.5, 154.0], [18.6, 154.0], [18.7, 154.0], [18.8, 154.0], [18.9, 154.0], [19.0, 157.0], [19.1, 157.0], [19.2, 157.0], [19.3, 157.0], [19.4, 157.0], [19.5, 163.0], [19.6, 163.0], [19.7, 163.0], [19.8, 163.0], [19.9, 163.0], [20.0, 163.0], [20.1, 163.0], [20.2, 163.0], [20.3, 163.0], [20.4, 163.0], [20.5, 168.0], [20.6, 168.0], [20.7, 168.0], [20.8, 168.0], [20.9, 168.0], [21.0, 179.0], [21.1, 179.0], [21.2, 179.0], [21.3, 179.0], [21.4, 179.0], [21.5, 181.0], [21.6, 181.0], [21.7, 181.0], [21.8, 181.0], [21.9, 181.0], [22.0, 181.0], [22.1, 181.0], [22.2, 181.0], [22.3, 181.0], [22.4, 181.0], [22.5, 183.0], [22.6, 183.0], [22.7, 183.0], [22.8, 183.0], [22.9, 183.0], [23.0, 186.0], [23.1, 186.0], [23.2, 186.0], [23.3, 186.0], [23.4, 186.0], [23.5, 188.0], [23.6, 188.0], [23.7, 188.0], [23.8, 188.0], [23.9, 188.0], [24.0, 206.0], [24.1, 206.0], [24.2, 206.0], [24.3, 206.0], [24.4, 206.0], [24.5, 206.0], [24.6, 206.0], [24.7, 206.0], [24.8, 206.0], [24.9, 206.0], [25.0, 210.0], [25.1, 210.0], [25.2, 210.0], [25.3, 210.0], [25.4, 210.0], [25.5, 215.0], [25.6, 215.0], [25.7, 215.0], [25.8, 215.0], [25.9, 215.0], [26.0, 223.0], [26.1, 223.0], [26.2, 223.0], [26.3, 223.0], [26.4, 223.0], [26.5, 225.0], [26.6, 225.0], [26.7, 225.0], [26.8, 225.0], [26.9, 225.0], [27.0, 230.0], [27.1, 230.0], [27.2, 230.0], [27.3, 230.0], [27.4, 230.0], [27.5, 232.0], [27.6, 232.0], [27.7, 232.0], [27.8, 232.0], [27.9, 232.0], [28.0, 232.0], [28.1, 232.0], [28.2, 232.0], [28.3, 232.0], [28.4, 232.0], [28.5, 233.0], [28.6, 233.0], [28.7, 233.0], [28.8, 233.0], [28.9, 233.0], [29.0, 235.0], [29.1, 235.0], [29.2, 235.0], [29.3, 235.0], [29.4, 235.0], [29.5, 244.0], [29.6, 244.0], [29.7, 244.0], [29.8, 244.0], [29.9, 244.0], [30.0, 256.0], [30.1, 256.0], [30.2, 256.0], [30.3, 256.0], [30.4, 256.0], [30.5, 257.0], [30.6, 257.0], [30.7, 257.0], [30.8, 257.0], [30.9, 257.0], [31.0, 295.0], [31.1, 295.0], [31.2, 295.0], [31.3, 295.0], [31.4, 295.0], [31.5, 300.0], [31.6, 300.0], [31.7, 300.0], [31.8, 300.0], [31.9, 300.0], [32.0, 302.0], [32.1, 302.0], [32.2, 302.0], [32.3, 302.0], [32.4, 302.0], [32.5, 302.0], [32.6, 302.0], [32.7, 302.0], [32.8, 302.0], [32.9, 302.0], [33.0, 305.0], [33.1, 305.0], [33.2, 305.0], [33.3, 305.0], [33.4, 305.0], [33.5, 316.0], [33.6, 316.0], [33.7, 316.0], [33.8, 316.0], [33.9, 316.0], [34.0, 320.0], [34.1, 320.0], [34.2, 320.0], [34.3, 320.0], [34.4, 320.0], [34.5, 324.0], [34.6, 324.0], [34.7, 324.0], [34.8, 324.0], [34.9, 324.0], [35.0, 326.0], [35.1, 326.0], [35.2, 326.0], [35.3, 326.0], [35.4, 326.0], [35.5, 330.0], [35.6, 330.0], [35.7, 330.0], [35.8, 330.0], [35.9, 330.0], [36.0, 340.0], [36.1, 340.0], [36.2, 340.0], [36.3, 340.0], [36.4, 340.0], [36.5, 342.0], [36.6, 342.0], [36.7, 342.0], [36.8, 342.0], [36.9, 342.0], [37.0, 350.0], [37.1, 350.0], [37.2, 350.0], [37.3, 350.0], [37.4, 350.0], [37.5, 364.0], [37.6, 364.0], [37.7, 364.0], [37.8, 364.0], [37.9, 364.0], [38.0, 371.0], [38.1, 371.0], [38.2, 371.0], [38.3, 371.0], [38.4, 371.0], [38.5, 374.0], [38.6, 374.0], [38.7, 374.0], [38.8, 374.0], [38.9, 374.0], [39.0, 375.0], [39.1, 375.0], [39.2, 375.0], [39.3, 375.0], [39.4, 375.0], [39.5, 377.0], [39.6, 377.0], [39.7, 377.0], [39.8, 377.0], [39.9, 377.0], [40.0, 377.0], [40.1, 377.0], [40.2, 377.0], [40.3, 377.0], [40.4, 377.0], [40.5, 378.0], [40.6, 378.0], [40.7, 378.0], [40.8, 378.0], [40.9, 378.0], [41.0, 383.0], [41.1, 383.0], [41.2, 383.0], [41.3, 383.0], [41.4, 383.0], [41.5, 386.0], [41.6, 386.0], [41.7, 386.0], [41.8, 386.0], [41.9, 386.0], [42.0, 393.0], [42.1, 393.0], [42.2, 393.0], [42.3, 393.0], [42.4, 393.0], [42.5, 398.0], [42.6, 398.0], [42.7, 398.0], [42.8, 398.0], [42.9, 398.0], [43.0, 404.0], [43.1, 404.0], [43.2, 404.0], [43.3, 404.0], [43.4, 404.0], [43.5, 423.0], [43.6, 423.0], [43.7, 423.0], [43.8, 423.0], [43.9, 423.0], [44.0, 427.0], [44.1, 427.0], [44.2, 427.0], [44.3, 427.0], [44.4, 427.0], [44.5, 430.0], [44.6, 430.0], [44.7, 430.0], [44.8, 430.0], [44.9, 430.0], [45.0, 430.0], [45.1, 430.0], [45.2, 430.0], [45.3, 430.0], [45.4, 430.0], [45.5, 432.0], [45.6, 432.0], [45.7, 432.0], [45.8, 432.0], [45.9, 432.0], [46.0, 434.0], [46.1, 434.0], [46.2, 434.0], [46.3, 434.0], [46.4, 434.0], [46.5, 437.0], [46.6, 437.0], [46.7, 437.0], [46.8, 437.0], [46.9, 437.0], [47.0, 459.0], [47.1, 459.0], [47.2, 459.0], [47.3, 459.0], [47.4, 459.0], [47.5, 460.0], [47.6, 460.0], [47.7, 460.0], [47.8, 460.0], [47.9, 460.0], [48.0, 482.0], [48.1, 482.0], [48.2, 482.0], [48.3, 482.0], [48.4, 482.0], [48.5, 492.0], [48.6, 492.0], [48.7, 492.0], [48.8, 492.0], [48.9, 492.0], [49.0, 493.0], [49.1, 493.0], [49.2, 493.0], [49.3, 493.0], [49.4, 493.0], [49.5, 501.0], [49.6, 501.0], [49.7, 501.0], [49.8, 501.0], [49.9, 501.0], [50.0, 502.0], [50.1, 502.0], [50.2, 502.0], [50.3, 502.0], [50.4, 502.0], [50.5, 504.0], [50.6, 504.0], [50.7, 504.0], [50.8, 504.0], [50.9, 504.0], [51.0, 508.0], [51.1, 508.0], [51.2, 508.0], [51.3, 508.0], [51.4, 508.0], [51.5, 514.0], [51.6, 514.0], [51.7, 514.0], [51.8, 514.0], [51.9, 514.0], [52.0, 536.0], [52.1, 536.0], [52.2, 536.0], [52.3, 536.0], [52.4, 536.0], [52.5, 538.0], [52.6, 538.0], [52.7, 538.0], [52.8, 538.0], [52.9, 538.0], [53.0, 539.0], [53.1, 539.0], [53.2, 539.0], [53.3, 539.0], [53.4, 539.0], [53.5, 539.0], [53.6, 539.0], [53.7, 539.0], [53.8, 539.0], [53.9, 539.0], [54.0, 541.0], [54.1, 541.0], [54.2, 541.0], [54.3, 541.0], [54.4, 541.0], [54.5, 583.0], [54.6, 583.0], [54.7, 583.0], [54.8, 583.0], [54.9, 583.0], [55.0, 589.0], [55.1, 589.0], [55.2, 589.0], [55.3, 589.0], [55.4, 589.0], [55.5, 601.0], [55.6, 601.0], [55.7, 601.0], [55.8, 601.0], [55.9, 601.0], [56.0, 607.0], [56.1, 607.0], [56.2, 607.0], [56.3, 607.0], [56.4, 607.0], [56.5, 616.0], [56.6, 616.0], [56.7, 616.0], [56.8, 616.0], [56.9, 616.0], [57.0, 619.0], [57.1, 619.0], [57.2, 619.0], [57.3, 619.0], [57.4, 619.0], [57.5, 697.0], [57.6, 697.0], [57.7, 697.0], [57.8, 697.0], [57.9, 697.0], [58.0, 697.0], [58.1, 697.0], [58.2, 697.0], [58.3, 697.0], [58.4, 697.0], [58.5, 706.0], [58.6, 706.0], [58.7, 706.0], [58.8, 706.0], [58.9, 706.0], [59.0, 707.0], [59.1, 707.0], [59.2, 707.0], [59.3, 707.0], [59.4, 707.0], [59.5, 709.0], [59.6, 709.0], [59.7, 709.0], [59.8, 709.0], [59.9, 709.0], [60.0, 716.0], [60.1, 716.0], [60.2, 716.0], [60.3, 716.0], [60.4, 716.0], [60.5, 723.0], [60.6, 723.0], [60.7, 723.0], [60.8, 723.0], [60.9, 723.0], [61.0, 725.0], [61.1, 725.0], [61.2, 725.0], [61.3, 725.0], [61.4, 725.0], [61.5, 749.0], [61.6, 749.0], [61.7, 749.0], [61.8, 749.0], [61.9, 749.0], [62.0, 749.0], [62.1, 749.0], [62.2, 749.0], [62.3, 749.0], [62.4, 749.0], [62.5, 777.0], [62.6, 777.0], [62.7, 777.0], [62.8, 777.0], [62.9, 777.0], [63.0, 778.0], [63.1, 778.0], [63.2, 778.0], [63.3, 778.0], [63.4, 778.0], [63.5, 833.0], [63.6, 833.0], [63.7, 833.0], [63.8, 833.0], [63.9, 833.0], [64.0, 836.0], [64.1, 836.0], [64.2, 836.0], [64.3, 836.0], [64.4, 836.0], [64.5, 844.0], [64.6, 844.0], [64.7, 844.0], [64.8, 844.0], [64.9, 844.0], [65.0, 852.0], [65.1, 852.0], [65.2, 852.0], [65.3, 852.0], [65.4, 852.0], [65.5, 856.0], [65.6, 856.0], [65.7, 856.0], [65.8, 856.0], [65.9, 856.0], [66.0, 861.0], [66.1, 861.0], [66.2, 861.0], [66.3, 861.0], [66.4, 861.0], [66.5, 868.0], [66.6, 868.0], [66.7, 868.0], [66.8, 868.0], [66.9, 868.0], [67.0, 884.0], [67.1, 884.0], [67.2, 884.0], [67.3, 884.0], [67.4, 884.0], [67.5, 889.0], [67.6, 889.0], [67.7, 889.0], [67.8, 889.0], [67.9, 889.0], [68.0, 900.0], [68.1, 900.0], [68.2, 900.0], [68.3, 900.0], [68.4, 900.0], [68.5, 908.0], [68.6, 908.0], [68.7, 908.0], [68.8, 908.0], [68.9, 908.0], [69.0, 909.0], [69.1, 909.0], [69.2, 909.0], [69.3, 909.0], [69.4, 909.0], [69.5, 912.0], [69.6, 912.0], [69.7, 912.0], [69.8, 912.0], [69.9, 912.0], [70.0, 923.0], [70.1, 923.0], [70.2, 923.0], [70.3, 923.0], [70.4, 923.0], [70.5, 926.0], [70.6, 926.0], [70.7, 926.0], [70.8, 926.0], [70.9, 926.0], [71.0, 934.0], [71.1, 934.0], [71.2, 934.0], [71.3, 934.0], [71.4, 934.0], [71.5, 936.0], [71.6, 936.0], [71.7, 936.0], [71.8, 936.0], [71.9, 936.0], [72.0, 936.0], [72.1, 936.0], [72.2, 936.0], [72.3, 936.0], [72.4, 936.0], [72.5, 946.0], [72.6, 946.0], [72.7, 946.0], [72.8, 946.0], [72.9, 946.0], [73.0, 947.0], [73.1, 947.0], [73.2, 947.0], [73.3, 947.0], [73.4, 947.0], [73.5, 949.0], [73.6, 949.0], [73.7, 949.0], [73.8, 949.0], [73.9, 949.0], [74.0, 949.0], [74.1, 949.0], [74.2, 949.0], [74.3, 949.0], [74.4, 949.0], [74.5, 964.0], [74.6, 964.0], [74.7, 964.0], [74.8, 964.0], [74.9, 964.0], [75.0, 971.0], [75.1, 971.0], [75.2, 971.0], [75.3, 971.0], [75.4, 971.0], [75.5, 971.0], [75.6, 971.0], [75.7, 971.0], [75.8, 971.0], [75.9, 971.0], [76.0, 972.0], [76.1, 972.0], [76.2, 972.0], [76.3, 972.0], [76.4, 972.0], [76.5, 1007.0], [76.6, 1007.0], [76.7, 1007.0], [76.8, 1007.0], [76.9, 1007.0], [77.0, 1035.0], [77.1, 1035.0], [77.2, 1035.0], [77.3, 1035.0], [77.4, 1035.0], [77.5, 1046.0], [77.6, 1046.0], [77.7, 1046.0], [77.8, 1046.0], [77.9, 1046.0], [78.0, 1051.0], [78.1, 1051.0], [78.2, 1051.0], [78.3, 1051.0], [78.4, 1051.0], [78.5, 1053.0], [78.6, 1053.0], [78.7, 1053.0], [78.8, 1053.0], [78.9, 1053.0], [79.0, 1056.0], [79.1, 1056.0], [79.2, 1056.0], [79.3, 1056.0], [79.4, 1056.0], [79.5, 1083.0], [79.6, 1083.0], [79.7, 1083.0], [79.8, 1083.0], [79.9, 1083.0], [80.0, 1131.0], [80.1, 1131.0], [80.2, 1131.0], [80.3, 1131.0], [80.4, 1131.0], [80.5, 1133.0], [80.6, 1133.0], [80.7, 1133.0], [80.8, 1133.0], [80.9, 1133.0], [81.0, 1167.0], [81.1, 1167.0], [81.2, 1167.0], [81.3, 1167.0], [81.4, 1167.0], [81.5, 1171.0], [81.6, 1171.0], [81.7, 1171.0], [81.8, 1171.0], [81.9, 1171.0], [82.0, 1219.0], [82.1, 1219.0], [82.2, 1219.0], [82.3, 1219.0], [82.4, 1219.0], [82.5, 1227.0], [82.6, 1227.0], [82.7, 1227.0], [82.8, 1227.0], [82.9, 1227.0], [83.0, 1238.0], [83.1, 1238.0], [83.2, 1238.0], [83.3, 1238.0], [83.4, 1238.0], [83.5, 1272.0], [83.6, 1272.0], [83.7, 1272.0], [83.8, 1272.0], [83.9, 1272.0], [84.0, 1298.0], [84.1, 1298.0], [84.2, 1298.0], [84.3, 1298.0], [84.4, 1298.0], [84.5, 1299.0], [84.6, 1299.0], [84.7, 1299.0], [84.8, 1299.0], [84.9, 1299.0], [85.0, 1301.0], [85.1, 1301.0], [85.2, 1301.0], [85.3, 1301.0], [85.4, 1301.0], [85.5, 1323.0], [85.6, 1323.0], [85.7, 1323.0], [85.8, 1323.0], [85.9, 1323.0], [86.0, 1368.0], [86.1, 1368.0], [86.2, 1368.0], [86.3, 1368.0], [86.4, 1368.0], [86.5, 1395.0], [86.6, 1395.0], [86.7, 1395.0], [86.8, 1395.0], [86.9, 1395.0], [87.0, 1502.0], [87.1, 1502.0], [87.2, 1502.0], [87.3, 1502.0], [87.4, 1502.0], [87.5, 1553.0], [87.6, 1553.0], [87.7, 1553.0], [87.8, 1553.0], [87.9, 1553.0], [88.0, 1680.0], [88.1, 1680.0], [88.2, 1680.0], [88.3, 1680.0], [88.4, 1680.0], [88.5, 1689.0], [88.6, 1689.0], [88.7, 1689.0], [88.8, 1689.0], [88.9, 1689.0], [89.0, 1690.0], [89.1, 1690.0], [89.2, 1690.0], [89.3, 1690.0], [89.4, 1690.0], [89.5, 1744.0], [89.6, 1744.0], [89.7, 1744.0], [89.8, 1744.0], [89.9, 1744.0], [90.0, 1835.0], [90.1, 1835.0], [90.2, 1835.0], [90.3, 1835.0], [90.4, 1835.0], [90.5, 1854.0], [90.6, 1854.0], [90.7, 1854.0], [90.8, 1854.0], [90.9, 1854.0], [91.0, 1865.0], [91.1, 1865.0], [91.2, 1865.0], [91.3, 1865.0], [91.4, 1865.0], [91.5, 1896.0], [91.6, 1896.0], [91.7, 1896.0], [91.8, 1896.0], [91.9, 1896.0], [92.0, 1954.0], [92.1, 1954.0], [92.2, 1954.0], [92.3, 1954.0], [92.4, 1954.0], [92.5, 1971.0], [92.6, 1971.0], [92.7, 1971.0], [92.8, 1971.0], [92.9, 1971.0], [93.0, 1975.0], [93.1, 1975.0], [93.2, 1975.0], [93.3, 1975.0], [93.4, 1975.0], [93.5, 1978.0], [93.6, 1978.0], [93.7, 1978.0], [93.8, 1978.0], [93.9, 1978.0], [94.0, 1985.0], [94.1, 1985.0], [94.2, 1985.0], [94.3, 1985.0], [94.4, 1985.0], [94.5, 2141.0], [94.6, 2141.0], [94.7, 2141.0], [94.8, 2141.0], [94.9, 2141.0], [95.0, 2212.0], [95.1, 2212.0], [95.2, 2212.0], [95.3, 2212.0], [95.4, 2212.0], [95.5, 2247.0], [95.6, 2247.0], [95.7, 2247.0], [95.8, 2247.0], [95.9, 2247.0], [96.0, 2266.0], [96.1, 2266.0], [96.2, 2266.0], [96.3, 2266.0], [96.4, 2266.0], [96.5, 2286.0], [96.6, 2286.0], [96.7, 2286.0], [96.8, 2286.0], [96.9, 2286.0], [97.0, 2294.0], [97.1, 2294.0], [97.2, 2294.0], [97.3, 2294.0], [97.4, 2294.0], [97.5, 2304.0], [97.6, 2304.0], [97.7, 2304.0], [97.8, 2304.0], [97.9, 2304.0], [98.0, 2329.0], [98.1, 2329.0], [98.2, 2329.0], [98.3, 2329.0], [98.4, 2329.0], [98.5, 3215.0], [98.6, 3215.0], [98.7, 3215.0], [98.8, 3215.0], [98.9, 3215.0], [99.0, 3215.0], [99.1, 3215.0], [99.2, 3215.0], [99.3, 3215.0], [99.4, 3215.0], [99.5, 3822.0], [99.6, 3822.0], [99.7, 3822.0], [99.8, 3822.0], [99.9, 3822.0]], "isOverall": false, "label": "Consulta de Pedidos", "isController": false}, {"data": [[0.0, 337.0], [0.1, 337.0], [0.2, 337.0], [0.3, 337.0], [0.4, 337.0], [0.5, 338.0], [0.6, 338.0], [0.7, 338.0], [0.8, 338.0], [0.9, 338.0], [1.0, 344.0], [1.1, 344.0], [1.2, 344.0], [1.3, 344.0], [1.4, 344.0], [1.5, 384.0], [1.6, 384.0], [1.7, 384.0], [1.8, 384.0], [1.9, 384.0], [2.0, 389.0], [2.1, 389.0], [2.2, 389.0], [2.3, 389.0], [2.4, 389.0], [2.5, 396.0], [2.6, 396.0], [2.7, 396.0], [2.8, 396.0], [2.9, 396.0], [3.0, 397.0], [3.1, 397.0], [3.2, 397.0], [3.3, 397.0], [3.4, 397.0], [3.5, 402.0], [3.6, 402.0], [3.7, 402.0], [3.8, 402.0], [3.9, 402.0], [4.0, 410.0], [4.1, 410.0], [4.2, 410.0], [4.3, 410.0], [4.4, 410.0], [4.5, 416.0], [4.6, 416.0], [4.7, 416.0], [4.8, 416.0], [4.9, 416.0], [5.0, 416.0], [5.1, 416.0], [5.2, 416.0], [5.3, 416.0], [5.4, 416.0], [5.5, 441.0], [5.6, 441.0], [5.7, 441.0], [5.8, 441.0], [5.9, 441.0], [6.0, 443.0], [6.1, 443.0], [6.2, 443.0], [6.3, 443.0], [6.4, 443.0], [6.5, 446.0], [6.6, 446.0], [6.7, 446.0], [6.8, 446.0], [6.9, 446.0], [7.0, 446.0], [7.1, 446.0], [7.2, 446.0], [7.3, 446.0], [7.4, 446.0], [7.5, 446.0], [7.6, 446.0], [7.7, 446.0], [7.8, 446.0], [7.9, 446.0], [8.0, 446.0], [8.1, 446.0], [8.2, 446.0], [8.3, 446.0], [8.4, 446.0], [8.5, 449.0], [8.6, 449.0], [8.7, 449.0], [8.8, 449.0], [8.9, 449.0], [9.0, 453.0], [9.1, 453.0], [9.2, 453.0], [9.3, 453.0], [9.4, 453.0], [9.5, 455.0], [9.6, 455.0], [9.7, 455.0], [9.8, 455.0], [9.9, 455.0], [10.0, 458.0], [10.1, 458.0], [10.2, 458.0], [10.3, 458.0], [10.4, 458.0], [10.5, 465.0], [10.6, 465.0], [10.7, 465.0], [10.8, 465.0], [10.9, 465.0], [11.0, 468.0], [11.1, 468.0], [11.2, 468.0], [11.3, 468.0], [11.4, 468.0], [11.5, 475.0], [11.6, 475.0], [11.7, 475.0], [11.8, 475.0], [11.9, 475.0], [12.0, 482.0], [12.1, 482.0], [12.2, 482.0], [12.3, 482.0], [12.4, 482.0], [12.5, 484.0], [12.6, 484.0], [12.7, 484.0], [12.8, 484.0], [12.9, 484.0], [13.0, 485.0], [13.1, 485.0], [13.2, 485.0], [13.3, 485.0], [13.4, 485.0], [13.5, 486.0], [13.6, 486.0], [13.7, 486.0], [13.8, 486.0], [13.9, 486.0], [14.0, 493.0], [14.1, 493.0], [14.2, 493.0], [14.3, 493.0], [14.4, 493.0], [14.5, 495.0], [14.6, 495.0], [14.7, 495.0], [14.8, 495.0], [14.9, 495.0], [15.0, 497.0], [15.1, 497.0], [15.2, 497.0], [15.3, 497.0], [15.4, 497.0], [15.5, 505.0], [15.6, 505.0], [15.7, 505.0], [15.8, 505.0], [15.9, 505.0], [16.0, 508.0], [16.1, 508.0], [16.2, 508.0], [16.3, 508.0], [16.4, 508.0], [16.5, 515.0], [16.6, 515.0], [16.7, 515.0], [16.8, 515.0], [16.9, 515.0], [17.0, 519.0], [17.1, 519.0], [17.2, 519.0], [17.3, 519.0], [17.4, 519.0], [17.5, 529.0], [17.6, 529.0], [17.7, 529.0], [17.8, 529.0], [17.9, 529.0], [18.0, 532.0], [18.1, 532.0], [18.2, 532.0], [18.3, 532.0], [18.4, 532.0], [18.5, 546.0], [18.6, 546.0], [18.7, 546.0], [18.8, 546.0], [18.9, 546.0], [19.0, 552.0], [19.1, 552.0], [19.2, 552.0], [19.3, 552.0], [19.4, 552.0], [19.5, 557.0], [19.6, 557.0], [19.7, 557.0], [19.8, 557.0], [19.9, 557.0], [20.0, 566.0], [20.1, 566.0], [20.2, 566.0], [20.3, 566.0], [20.4, 566.0], [20.5, 568.0], [20.6, 568.0], [20.7, 568.0], [20.8, 568.0], [20.9, 568.0], [21.0, 569.0], [21.1, 569.0], [21.2, 569.0], [21.3, 569.0], [21.4, 569.0], [21.5, 572.0], [21.6, 572.0], [21.7, 572.0], [21.8, 572.0], [21.9, 572.0], [22.0, 581.0], [22.1, 581.0], [22.2, 581.0], [22.3, 581.0], [22.4, 581.0], [22.5, 586.0], [22.6, 586.0], [22.7, 586.0], [22.8, 586.0], [22.9, 586.0], [23.0, 587.0], [23.1, 587.0], [23.2, 587.0], [23.3, 587.0], [23.4, 587.0], [23.5, 591.0], [23.6, 591.0], [23.7, 591.0], [23.8, 591.0], [23.9, 591.0], [24.0, 596.0], [24.1, 596.0], [24.2, 596.0], [24.3, 596.0], [24.4, 596.0], [24.5, 599.0], [24.6, 599.0], [24.7, 599.0], [24.8, 599.0], [24.9, 599.0], [25.0, 605.0], [25.1, 605.0], [25.2, 605.0], [25.3, 605.0], [25.4, 605.0], [25.5, 611.0], [25.6, 611.0], [25.7, 611.0], [25.8, 611.0], [25.9, 611.0], [26.0, 624.0], [26.1, 624.0], [26.2, 624.0], [26.3, 624.0], [26.4, 624.0], [26.5, 626.0], [26.6, 626.0], [26.7, 626.0], [26.8, 626.0], [26.9, 626.0], [27.0, 635.0], [27.1, 635.0], [27.2, 635.0], [27.3, 635.0], [27.4, 635.0], [27.5, 662.0], [27.6, 662.0], [27.7, 662.0], [27.8, 662.0], [27.9, 662.0], [28.0, 670.0], [28.1, 670.0], [28.2, 670.0], [28.3, 670.0], [28.4, 670.0], [28.5, 673.0], [28.6, 673.0], [28.7, 673.0], [28.8, 673.0], [28.9, 673.0], [29.0, 673.0], [29.1, 673.0], [29.2, 673.0], [29.3, 673.0], [29.4, 673.0], [29.5, 681.0], [29.6, 681.0], [29.7, 681.0], [29.8, 681.0], [29.9, 681.0], [30.0, 682.0], [30.1, 682.0], [30.2, 682.0], [30.3, 682.0], [30.4, 682.0], [30.5, 683.0], [30.6, 683.0], [30.7, 683.0], [30.8, 683.0], [30.9, 683.0], [31.0, 684.0], [31.1, 684.0], [31.2, 684.0], [31.3, 684.0], [31.4, 684.0], [31.5, 690.0], [31.6, 690.0], [31.7, 690.0], [31.8, 690.0], [31.9, 690.0], [32.0, 706.0], [32.1, 706.0], [32.2, 706.0], [32.3, 706.0], [32.4, 706.0], [32.5, 708.0], [32.6, 708.0], [32.7, 708.0], [32.8, 708.0], [32.9, 708.0], [33.0, 717.0], [33.1, 717.0], [33.2, 717.0], [33.3, 717.0], [33.4, 717.0], [33.5, 721.0], [33.6, 721.0], [33.7, 721.0], [33.8, 721.0], [33.9, 721.0], [34.0, 728.0], [34.1, 728.0], [34.2, 728.0], [34.3, 728.0], [34.4, 728.0], [34.5, 730.0], [34.6, 730.0], [34.7, 730.0], [34.8, 730.0], [34.9, 730.0], [35.0, 731.0], [35.1, 731.0], [35.2, 731.0], [35.3, 731.0], [35.4, 731.0], [35.5, 734.0], [35.6, 734.0], [35.7, 734.0], [35.8, 734.0], [35.9, 734.0], [36.0, 746.0], [36.1, 746.0], [36.2, 746.0], [36.3, 746.0], [36.4, 746.0], [36.5, 754.0], [36.6, 754.0], [36.7, 754.0], [36.8, 754.0], [36.9, 754.0], [37.0, 763.0], [37.1, 763.0], [37.2, 763.0], [37.3, 763.0], [37.4, 763.0], [37.5, 763.0], [37.6, 763.0], [37.7, 763.0], [37.8, 763.0], [37.9, 763.0], [38.0, 780.0], [38.1, 780.0], [38.2, 780.0], [38.3, 780.0], [38.4, 780.0], [38.5, 781.0], [38.6, 781.0], [38.7, 781.0], [38.8, 781.0], [38.9, 781.0], [39.0, 781.0], [39.1, 781.0], [39.2, 781.0], [39.3, 781.0], [39.4, 781.0], [39.5, 784.0], [39.6, 784.0], [39.7, 784.0], [39.8, 784.0], [39.9, 784.0], [40.0, 790.0], [40.1, 790.0], [40.2, 790.0], [40.3, 790.0], [40.4, 790.0], [40.5, 791.0], [40.6, 791.0], [40.7, 791.0], [40.8, 791.0], [40.9, 791.0], [41.0, 796.0], [41.1, 796.0], [41.2, 796.0], [41.3, 796.0], [41.4, 796.0], [41.5, 800.0], [41.6, 800.0], [41.7, 800.0], [41.8, 800.0], [41.9, 800.0], [42.0, 809.0], [42.1, 809.0], [42.2, 809.0], [42.3, 809.0], [42.4, 809.0], [42.5, 816.0], [42.6, 816.0], [42.7, 816.0], [42.8, 816.0], [42.9, 816.0], [43.0, 822.0], [43.1, 822.0], [43.2, 822.0], [43.3, 822.0], [43.4, 822.0], [43.5, 824.0], [43.6, 824.0], [43.7, 824.0], [43.8, 824.0], [43.9, 824.0], [44.0, 829.0], [44.1, 829.0], [44.2, 829.0], [44.3, 829.0], [44.4, 829.0], [44.5, 836.0], [44.6, 836.0], [44.7, 836.0], [44.8, 836.0], [44.9, 836.0], [45.0, 837.0], [45.1, 837.0], [45.2, 837.0], [45.3, 837.0], [45.4, 837.0], [45.5, 840.0], [45.6, 840.0], [45.7, 840.0], [45.8, 840.0], [45.9, 840.0], [46.0, 842.0], [46.1, 842.0], [46.2, 842.0], [46.3, 842.0], [46.4, 842.0], [46.5, 852.0], [46.6, 852.0], [46.7, 852.0], [46.8, 852.0], [46.9, 852.0], [47.0, 853.0], [47.1, 853.0], [47.2, 853.0], [47.3, 853.0], [47.4, 853.0], [47.5, 858.0], [47.6, 858.0], [47.7, 858.0], [47.8, 858.0], [47.9, 858.0], [48.0, 861.0], [48.1, 861.0], [48.2, 861.0], [48.3, 861.0], [48.4, 861.0], [48.5, 875.0], [48.6, 875.0], [48.7, 875.0], [48.8, 875.0], [48.9, 875.0], [49.0, 885.0], [49.1, 885.0], [49.2, 885.0], [49.3, 885.0], [49.4, 885.0], [49.5, 885.0], [49.6, 885.0], [49.7, 885.0], [49.8, 885.0], [49.9, 885.0], [50.0, 887.0], [50.1, 887.0], [50.2, 887.0], [50.3, 887.0], [50.4, 887.0], [50.5, 888.0], [50.6, 888.0], [50.7, 888.0], [50.8, 888.0], [50.9, 888.0], [51.0, 893.0], [51.1, 893.0], [51.2, 893.0], [51.3, 893.0], [51.4, 893.0], [51.5, 896.0], [51.6, 896.0], [51.7, 896.0], [51.8, 896.0], [51.9, 896.0], [52.0, 903.0], [52.1, 903.0], [52.2, 903.0], [52.3, 903.0], [52.4, 903.0], [52.5, 903.0], [52.6, 903.0], [52.7, 903.0], [52.8, 903.0], [52.9, 903.0], [53.0, 907.0], [53.1, 907.0], [53.2, 907.0], [53.3, 907.0], [53.4, 907.0], [53.5, 907.0], [53.6, 907.0], [53.7, 907.0], [53.8, 907.0], [53.9, 907.0], [54.0, 908.0], [54.1, 908.0], [54.2, 908.0], [54.3, 908.0], [54.4, 908.0], [54.5, 912.0], [54.6, 912.0], [54.7, 912.0], [54.8, 912.0], [54.9, 912.0], [55.0, 913.0], [55.1, 913.0], [55.2, 913.0], [55.3, 913.0], [55.4, 913.0], [55.5, 922.0], [55.6, 922.0], [55.7, 922.0], [55.8, 922.0], [55.9, 922.0], [56.0, 927.0], [56.1, 927.0], [56.2, 927.0], [56.3, 927.0], [56.4, 927.0], [56.5, 927.0], [56.6, 927.0], [56.7, 927.0], [56.8, 927.0], [56.9, 927.0], [57.0, 931.0], [57.1, 931.0], [57.2, 931.0], [57.3, 931.0], [57.4, 931.0], [57.5, 941.0], [57.6, 941.0], [57.7, 941.0], [57.8, 941.0], [57.9, 941.0], [58.0, 945.0], [58.1, 945.0], [58.2, 945.0], [58.3, 945.0], [58.4, 945.0], [58.5, 952.0], [58.6, 952.0], [58.7, 952.0], [58.8, 952.0], [58.9, 952.0], [59.0, 981.0], [59.1, 981.0], [59.2, 981.0], [59.3, 981.0], [59.4, 981.0], [59.5, 1009.0], [59.6, 1009.0], [59.7, 1009.0], [59.8, 1009.0], [59.9, 1009.0], [60.0, 1013.0], [60.1, 1013.0], [60.2, 1013.0], [60.3, 1013.0], [60.4, 1013.0], [60.5, 1017.0], [60.6, 1017.0], [60.7, 1017.0], [60.8, 1017.0], [60.9, 1017.0], [61.0, 1033.0], [61.1, 1033.0], [61.2, 1033.0], [61.3, 1033.0], [61.4, 1033.0], [61.5, 1038.0], [61.6, 1038.0], [61.7, 1038.0], [61.8, 1038.0], [61.9, 1038.0], [62.0, 1041.0], [62.1, 1041.0], [62.2, 1041.0], [62.3, 1041.0], [62.4, 1041.0], [62.5, 1049.0], [62.6, 1049.0], [62.7, 1049.0], [62.8, 1049.0], [62.9, 1049.0], [63.0, 1054.0], [63.1, 1054.0], [63.2, 1054.0], [63.3, 1054.0], [63.4, 1054.0], [63.5, 1075.0], [63.6, 1075.0], [63.7, 1075.0], [63.8, 1075.0], [63.9, 1075.0], [64.0, 1076.0], [64.1, 1076.0], [64.2, 1076.0], [64.3, 1076.0], [64.4, 1076.0], [64.5, 1113.0], [64.6, 1113.0], [64.7, 1113.0], [64.8, 1113.0], [64.9, 1113.0], [65.0, 1119.0], [65.1, 1119.0], [65.2, 1119.0], [65.3, 1119.0], [65.4, 1119.0], [65.5, 1134.0], [65.6, 1134.0], [65.7, 1134.0], [65.8, 1134.0], [65.9, 1134.0], [66.0, 1186.0], [66.1, 1186.0], [66.2, 1186.0], [66.3, 1186.0], [66.4, 1186.0], [66.5, 1228.0], [66.6, 1228.0], [66.7, 1228.0], [66.8, 1228.0], [66.9, 1228.0], [67.0, 1260.0], [67.1, 1260.0], [67.2, 1260.0], [67.3, 1260.0], [67.4, 1260.0], [67.5, 1261.0], [67.6, 1261.0], [67.7, 1261.0], [67.8, 1261.0], [67.9, 1261.0], [68.0, 1274.0], [68.1, 1274.0], [68.2, 1274.0], [68.3, 1274.0], [68.4, 1274.0], [68.5, 1274.0], [68.6, 1274.0], [68.7, 1274.0], [68.8, 1274.0], [68.9, 1274.0], [69.0, 1277.0], [69.1, 1277.0], [69.2, 1277.0], [69.3, 1277.0], [69.4, 1277.0], [69.5, 1287.0], [69.6, 1287.0], [69.7, 1287.0], [69.8, 1287.0], [69.9, 1287.0], [70.0, 1292.0], [70.1, 1292.0], [70.2, 1292.0], [70.3, 1292.0], [70.4, 1292.0], [70.5, 1293.0], [70.6, 1293.0], [70.7, 1293.0], [70.8, 1293.0], [70.9, 1293.0], [71.0, 1365.0], [71.1, 1365.0], [71.2, 1365.0], [71.3, 1365.0], [71.4, 1365.0], [71.5, 1368.0], [71.6, 1368.0], [71.7, 1368.0], [71.8, 1368.0], [71.9, 1368.0], [72.0, 1397.0], [72.1, 1397.0], [72.2, 1397.0], [72.3, 1397.0], [72.4, 1397.0], [72.5, 1441.0], [72.6, 1441.0], [72.7, 1441.0], [72.8, 1441.0], [72.9, 1441.0], [73.0, 1456.0], [73.1, 1456.0], [73.2, 1456.0], [73.3, 1456.0], [73.4, 1456.0], [73.5, 1484.0], [73.6, 1484.0], [73.7, 1484.0], [73.8, 1484.0], [73.9, 1484.0], [74.0, 1502.0], [74.1, 1502.0], [74.2, 1502.0], [74.3, 1502.0], [74.4, 1502.0], [74.5, 1507.0], [74.6, 1507.0], [74.7, 1507.0], [74.8, 1507.0], [74.9, 1507.0], [75.0, 1509.0], [75.1, 1509.0], [75.2, 1509.0], [75.3, 1509.0], [75.4, 1509.0], [75.5, 1512.0], [75.6, 1512.0], [75.7, 1512.0], [75.8, 1512.0], [75.9, 1512.0], [76.0, 1516.0], [76.1, 1516.0], [76.2, 1516.0], [76.3, 1516.0], [76.4, 1516.0], [76.5, 1523.0], [76.6, 1523.0], [76.7, 1523.0], [76.8, 1523.0], [76.9, 1523.0], [77.0, 1543.0], [77.1, 1543.0], [77.2, 1543.0], [77.3, 1543.0], [77.4, 1543.0], [77.5, 1545.0], [77.6, 1545.0], [77.7, 1545.0], [77.8, 1545.0], [77.9, 1545.0], [78.0, 1550.0], [78.1, 1550.0], [78.2, 1550.0], [78.3, 1550.0], [78.4, 1550.0], [78.5, 1552.0], [78.6, 1552.0], [78.7, 1552.0], [78.8, 1552.0], [78.9, 1552.0], [79.0, 1568.0], [79.1, 1568.0], [79.2, 1568.0], [79.3, 1568.0], [79.4, 1568.0], [79.5, 1584.0], [79.6, 1584.0], [79.7, 1584.0], [79.8, 1584.0], [79.9, 1584.0], [80.0, 1596.0], [80.1, 1596.0], [80.2, 1596.0], [80.3, 1596.0], [80.4, 1596.0], [80.5, 1596.0], [80.6, 1596.0], [80.7, 1596.0], [80.8, 1596.0], [80.9, 1596.0], [81.0, 1603.0], [81.1, 1603.0], [81.2, 1603.0], [81.3, 1603.0], [81.4, 1603.0], [81.5, 1620.0], [81.6, 1620.0], [81.7, 1620.0], [81.8, 1620.0], [81.9, 1620.0], [82.0, 1640.0], [82.1, 1640.0], [82.2, 1640.0], [82.3, 1640.0], [82.4, 1640.0], [82.5, 1644.0], [82.6, 1644.0], [82.7, 1644.0], [82.8, 1644.0], [82.9, 1644.0], [83.0, 1646.0], [83.1, 1646.0], [83.2, 1646.0], [83.3, 1646.0], [83.4, 1646.0], [83.5, 1655.0], [83.6, 1655.0], [83.7, 1655.0], [83.8, 1655.0], [83.9, 1655.0], [84.0, 1686.0], [84.1, 1686.0], [84.2, 1686.0], [84.3, 1686.0], [84.4, 1686.0], [84.5, 1697.0], [84.6, 1697.0], [84.7, 1697.0], [84.8, 1697.0], [84.9, 1697.0], [85.0, 1700.0], [85.1, 1700.0], [85.2, 1700.0], [85.3, 1700.0], [85.4, 1700.0], [85.5, 1701.0], [85.6, 1701.0], [85.7, 1701.0], [85.8, 1701.0], [85.9, 1701.0], [86.0, 1720.0], [86.1, 1720.0], [86.2, 1720.0], [86.3, 1720.0], [86.4, 1720.0], [86.5, 1725.0], [86.6, 1725.0], [86.7, 1725.0], [86.8, 1725.0], [86.9, 1725.0], [87.0, 1733.0], [87.1, 1733.0], [87.2, 1733.0], [87.3, 1733.0], [87.4, 1733.0], [87.5, 1740.0], [87.6, 1740.0], [87.7, 1740.0], [87.8, 1740.0], [87.9, 1740.0], [88.0, 1750.0], [88.1, 1750.0], [88.2, 1750.0], [88.3, 1750.0], [88.4, 1750.0], [88.5, 1755.0], [88.6, 1755.0], [88.7, 1755.0], [88.8, 1755.0], [88.9, 1755.0], [89.0, 1763.0], [89.1, 1763.0], [89.2, 1763.0], [89.3, 1763.0], [89.4, 1763.0], [89.5, 1765.0], [89.6, 1765.0], [89.7, 1765.0], [89.8, 1765.0], [89.9, 1765.0], [90.0, 1766.0], [90.1, 1766.0], [90.2, 1766.0], [90.3, 1766.0], [90.4, 1766.0], [90.5, 1788.0], [90.6, 1788.0], [90.7, 1788.0], [90.8, 1788.0], [90.9, 1788.0], [91.0, 1810.0], [91.1, 1810.0], [91.2, 1810.0], [91.3, 1810.0], [91.4, 1810.0], [91.5, 1811.0], [91.6, 1811.0], [91.7, 1811.0], [91.8, 1811.0], [91.9, 1811.0], [92.0, 1819.0], [92.1, 1819.0], [92.2, 1819.0], [92.3, 1819.0], [92.4, 1819.0], [92.5, 1830.0], [92.6, 1830.0], [92.7, 1830.0], [92.8, 1830.0], [92.9, 1830.0], [93.0, 1836.0], [93.1, 1836.0], [93.2, 1836.0], [93.3, 1836.0], [93.4, 1836.0], [93.5, 1856.0], [93.6, 1856.0], [93.7, 1856.0], [93.8, 1856.0], [93.9, 1856.0], [94.0, 1868.0], [94.1, 1868.0], [94.2, 1868.0], [94.3, 1868.0], [94.4, 1868.0], [94.5, 1914.0], [94.6, 1914.0], [94.7, 1914.0], [94.8, 1914.0], [94.9, 1914.0], [95.0, 1937.0], [95.1, 1937.0], [95.2, 1937.0], [95.3, 1937.0], [95.4, 1937.0], [95.5, 1970.0], [95.6, 1970.0], [95.7, 1970.0], [95.8, 1970.0], [95.9, 1970.0], [96.0, 2116.0], [96.1, 2116.0], [96.2, 2116.0], [96.3, 2116.0], [96.4, 2116.0], [96.5, 2219.0], [96.6, 2219.0], [96.7, 2219.0], [96.8, 2219.0], [96.9, 2219.0], [97.0, 2261.0], [97.1, 2261.0], [97.2, 2261.0], [97.3, 2261.0], [97.4, 2261.0], [97.5, 2308.0], [97.6, 2308.0], [97.7, 2308.0], [97.8, 2308.0], [97.9, 2308.0], [98.0, 2315.0], [98.1, 2315.0], [98.2, 2315.0], [98.3, 2315.0], [98.4, 2315.0], [98.5, 2406.0], [98.6, 2406.0], [98.7, 2406.0], [98.8, 2406.0], [98.9, 2406.0], [99.0, 2426.0], [99.1, 2426.0], [99.2, 2426.0], [99.3, 2426.0], [99.4, 2426.0], [99.5, 2567.0], [99.6, 2567.0], [99.7, 2567.0], [99.8, 2567.0], [99.9, 2567.0]], "isOverall": false, "label": "Login simultâneo", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 27.0, "series": [{"data": [[0.0, 20.0], [600.0, 12.0], [700.0, 13.0], [800.0, 8.0], [900.0, 16.0], [1000.0, 7.0], [1100.0, 4.0], [1200.0, 6.0], [1300.0, 5.0], [1400.0, 7.0], [1500.0, 2.0], [100.0, 10.0], [1600.0, 2.0], [1700.0, 1.0], [1800.0, 2.0], [1900.0, 4.0], [2000.0, 3.0], [2200.0, 3.0], [2300.0, 3.0], [2400.0, 4.0], [2700.0, 1.0], [2800.0, 1.0], [3000.0, 1.0], [200.0, 13.0], [3300.0, 1.0], [3200.0, 1.0], [300.0, 14.0], [400.0, 13.0], [500.0, 23.0]], "isOverall": false, "label": "Criação de pedidos", "isController": false}, {"data": [[0.0, 23.0], [600.0, 7.0], [700.0, 15.0], [800.0, 8.0], [900.0, 11.0], [1000.0, 12.0], [1100.0, 5.0], [1200.0, 5.0], [1300.0, 9.0], [1400.0, 5.0], [1500.0, 6.0], [100.0, 11.0], [1600.0, 2.0], [1800.0, 4.0], [1900.0, 5.0], [2000.0, 3.0], [2100.0, 5.0], [2300.0, 6.0], [2200.0, 4.0], [2400.0, 3.0], [2600.0, 5.0], [2800.0, 1.0], [2700.0, 2.0], [200.0, 7.0], [3200.0, 1.0], [4200.0, 1.0], [300.0, 13.0], [400.0, 9.0], [500.0, 12.0]], "isOverall": false, "label": "Listar restaurantes", "isController": false}, {"data": [[0.0, 21.0], [2100.0, 1.0], [2200.0, 5.0], [2300.0, 2.0], [600.0, 6.0], [700.0, 10.0], [200.0, 15.0], [800.0, 9.0], [3200.0, 2.0], [900.0, 17.0], [3800.0, 1.0], [1000.0, 7.0], [1100.0, 4.0], [300.0, 23.0], [1200.0, 6.0], [1300.0, 4.0], [1500.0, 2.0], [100.0, 27.0], [400.0, 13.0], [1600.0, 3.0], [1700.0, 1.0], [1800.0, 4.0], [1900.0, 5.0], [500.0, 12.0]], "isOverall": false, "label": "Consulta de Pedidos", "isController": false}, {"data": [[2100.0, 1.0], [2200.0, 2.0], [2300.0, 2.0], [600.0, 14.0], [2400.0, 2.0], [2500.0, 1.0], [700.0, 19.0], [800.0, 21.0], [900.0, 15.0], [1000.0, 10.0], [1100.0, 4.0], [300.0, 7.0], [1200.0, 9.0], [1300.0, 3.0], [1400.0, 3.0], [1500.0, 14.0], [400.0, 24.0], [1600.0, 8.0], [1700.0, 12.0], [1800.0, 7.0], [1900.0, 3.0], [500.0, 19.0]], "isOverall": false, "label": "Login simultâneo", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 155.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1.500ms"], [2, "Requests having \nresponse time > 1.500ms"], [3, "Requests in error"]], "maxY": 381.0, "series": [{"data": [[0.0, 264.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 381.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1.500ms", "isController": false}, {"data": [[2.0, 155.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1.500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 58.16875000000004, "minX": 1.75400436E12, "maxY": 58.16875000000004, "series": [{"data": [[1.75400436E12, 58.16875000000004]], "isOverall": false, "label": "Testes - 200 acessos", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75400436E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 24.0, "minX": 1.0, "maxY": 3340.0, "series": [{"data": [[3.0, 51.5], [4.0, 201.5], [10.0, 55.83333333333333], [11.0, 69.0], [12.0, 65.0], [13.0, 69.0], [14.0, 77.25], [15.0, 99.5], [16.0, 99.0], [17.0, 132.0], [18.0, 176.0], [19.0, 180.0], [21.0, 278.0], [23.0, 312.0], [25.0, 299.0], [26.0, 432.0], [27.0, 426.0], [30.0, 501.0], [31.0, 468.0], [32.0, 491.0], [34.0, 203.0], [36.0, 607.0], [39.0, 501.0], [40.0, 714.0], [41.0, 472.0], [43.0, 889.0], [42.0, 346.0], [44.0, 638.5], [45.0, 505.5], [49.0, 913.5], [48.0, 455.0], [50.0, 544.8571428571428], [51.0, 359.0], [52.0, 588.0], [54.0, 465.3333333333333], [55.0, 968.0], [56.0, 937.0], [57.0, 1020.0], [58.0, 743.8], [59.0, 995.5], [61.0, 644.8], [60.0, 712.0], [64.0, 742.5], [65.0, 718.5454545454545], [66.0, 1174.142857142857], [67.0, 1311.375], [68.0, 904.0], [70.0, 840.625], [71.0, 1162.0], [69.0, 919.5], [72.0, 882.5], [73.0, 370.75], [74.0, 723.5], [75.0, 1073.0], [76.0, 1059.6666666666665], [77.0, 1192.5], [78.0, 383.0], [82.0, 933.0], [80.0, 530.0], [85.0, 1051.0], [87.0, 801.2], [88.0, 863.25], [89.0, 1844.4], [91.0, 1120.3333333333333], [95.0, 1238.0], [94.0, 1007.0], [93.0, 2264.0], [92.0, 1966.0], [96.0, 2419.0], [97.0, 1995.0], [98.0, 1165.0], [100.0, 2993.5], [103.0, 3340.0], [102.0, 2469.714285714286], [105.0, 1827.0]], "isOverall": false, "label": "Criação de pedidos", "isController": false}, {"data": [[58.78500000000003, 847.24]], "isOverall": false, "label": "Criação de pedidos-Aggregated", "isController": false}, {"data": [[8.0, 215.0], [9.0, 25.0], [10.0, 38.4], [11.0, 45.0], [12.0, 90.66666666666666], [13.0, 45.4], [14.0, 44.0], [15.0, 82.0], [16.0, 122.14285714285714], [17.0, 146.0], [20.0, 144.0], [22.0, 271.0], [24.0, 339.0], [25.0, 396.0], [26.0, 462.0], [27.0, 297.0], [30.0, 556.0], [31.0, 402.5], [33.0, 447.5], [37.0, 630.6], [39.0, 605.0], [41.0, 615.0], [40.0, 423.3333333333333], [44.0, 864.0], [47.0, 899.0], [49.0, 686.0], [48.0, 208.0], [50.0, 384.5], [51.0, 785.0], [52.0, 1077.0], [53.0, 716.0], [55.0, 880.0], [54.0, 627.4285714285714], [56.0, 789.0], [57.0, 587.6666666666666], [58.0, 426.0], [59.0, 238.0], [61.0, 931.3333333333334], [60.0, 469.0], [63.0, 670.0], [64.0, 765.5], [66.0, 814.9], [65.0, 855.0], [67.0, 1046.0], [68.0, 1009.0], [70.0, 547.0], [73.0, 1132.25], [72.0, 810.6666666666667], [75.0, 1578.3333333333335], [74.0, 712.0], [78.0, 1156.0], [79.0, 1481.0], [77.0, 827.0], [76.0, 610.5], [80.0, 1411.0], [82.0, 1811.3333333333333], [84.0, 1800.5], [85.0, 1801.0], [87.0, 1465.5555555555557], [88.0, 2108.142857142857], [90.0, 2601.0], [91.0, 2167.6666666666665], [89.0, 2457.6666666666665], [95.0, 1941.0], [94.0, 1654.5], [93.0, 1346.6], [96.0, 1956.0], [97.0, 1910.0], [98.0, 1789.6666666666667], [99.0, 1780.5], [100.0, 1870.75], [102.0, 2353.1428571428573], [105.0, 1958.25]], "isOverall": false, "label": "Listar restaurantes", "isController": false}, {"data": [[61.764999999999965, 1013.3099999999995]], "isOverall": false, "label": "Listar restaurantes-Aggregated", "isController": false}, {"data": [[2.0, 31.0], [3.0, 38.0], [4.0, 24.0], [5.0, 232.0], [7.0, 207.0], [8.0, 105.0], [10.0, 94.75], [11.0, 42.75], [12.0, 177.25], [13.0, 103.0], [14.0, 105.0], [15.0, 128.66666666666666], [16.0, 129.25], [17.0, 164.5], [18.0, 153.0], [19.0, 181.0], [21.0, 155.5], [23.0, 420.5], [25.0, 258.5], [26.0, 129.0], [27.0, 239.0], [28.0, 206.0], [29.0, 305.0], [30.0, 290.5], [33.0, 427.0], [32.0, 453.5], [35.0, 378.0], [34.0, 235.0], [37.0, 410.5], [36.0, 508.0], [39.0, 430.0], [38.0, 257.0], [41.0, 398.0], [40.0, 466.0], [42.0, 514.0], [45.0, 215.0], [44.0, 294.0], [47.0, 301.0], [48.0, 223.0], [50.0, 597.5714285714286], [51.0, 445.5], [52.0, 552.5], [55.0, 853.6666666666666], [54.0, 708.0], [56.0, 727.0], [57.0, 188.0], [59.0, 614.0], [58.0, 340.0], [61.0, 531.75], [60.0, 374.0], [62.0, 806.5], [63.0, 546.0], [64.0, 638.0], [66.0, 775.6666666666666], [67.0, 874.1250000000001], [65.0, 967.6666666666667], [68.0, 842.6666666666667], [70.0, 1084.6666666666667], [71.0, 230.0], [69.0, 437.0], [73.0, 1283.0], [74.0, 773.5], [75.0, 1374.5], [72.0, 723.0], [76.0, 1038.0], [79.0, 852.0], [78.0, 1189.0], [80.0, 916.0], [82.0, 553.5], [87.0, 398.0], [86.0, 1167.0], [85.0, 936.0], [84.0, 715.0], [89.0, 1621.0], [88.0, 1091.0], [91.0, 1789.5], [90.0, 709.0], [94.0, 1650.5], [93.0, 1489.5], [95.0, 2066.6666666666665], [92.0, 1865.0], [97.0, 2838.0], [96.0, 2118.5], [99.0, 2584.5], [98.0, 2286.0], [103.0, 2329.0], [102.0, 3215.0], [101.0, 2304.0], [100.0, 1323.0], [105.0, 2141.0], [104.0, 2212.0], [1.0, 35.0]], "isOverall": false, "label": "Consulta de Pedidos", "isController": false}, {"data": [[52.459999999999965, 719.8399999999995]], "isOverall": false, "label": "Consulta de Pedidos-Aggregated", "isController": false}, {"data": [[7.0, 337.0], [8.0, 338.0], [9.0, 366.5], [10.0, 398.6666666666667], [11.0, 448.0], [12.0, 415.0], [13.0, 518.75], [14.0, 416.0], [15.0, 516.5], [16.0, 476.0], [17.0, 529.25], [18.0, 662.0], [20.0, 588.0], [22.0, 561.5], [24.0, 683.5], [25.0, 596.0], [26.0, 610.5], [27.0, 717.0], [28.0, 572.0], [29.0, 636.0], [31.0, 572.5], [32.0, 599.0], [33.0, 670.0], [34.0, 482.0], [36.0, 821.5], [37.0, 796.0], [39.0, 810.5], [40.0, 780.5], [41.0, 642.0], [42.0, 746.0], [43.0, 809.0], [44.0, 1308.0], [45.0, 829.0], [47.0, 816.0], [48.0, 791.0], [49.0, 791.0], [50.0, 788.6666666666667], [52.0, 856.5], [54.0, 752.0], [55.0, 737.0], [56.0, 715.0], [58.0, 1017.0], [60.0, 872.2], [61.0, 813.5], [63.0, 648.0], [64.0, 971.0], [65.0, 1561.0], [66.0, 909.0769230769231], [67.0, 1115.6666666666665], [68.0, 842.0], [69.0, 1038.0], [70.0, 978.5], [71.0, 875.0], [72.0, 1780.0], [73.0, 1170.5], [74.0, 1344.5], [75.0, 1168.0], [76.0, 1550.0], [79.0, 1293.0], [80.0, 909.3333333333334], [84.0, 1368.0], [85.0, 1484.0], [86.0, 1514.5], [87.0, 1682.75], [88.0, 1322.2], [89.0, 1856.0], [90.0, 1277.0], [91.0, 1873.5], [92.0, 458.0], [93.0, 1764.6666666666667], [94.0, 1507.0], [95.0, 1906.5], [96.0, 1530.0], [98.0, 1512.0], [99.0, 1911.6666666666667], [102.0, 1721.0], [103.0, 1612.2], [101.0, 1733.0], [100.0, 1747.0], [104.0, 1686.0], [105.0, 1415.8]], "isOverall": false, "label": "Login simultâneo", "isController": false}, {"data": [[59.665, 1036.3649999999998]], "isOverall": false, "label": "Login simultâneo-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 105.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 5803.333333333333, "minX": 1.75400436E12, "maxY": 17129.55, "series": [{"data": [[1.75400436E12, 17129.55]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.75400436E12, 5803.333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75400436E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 719.8399999999995, "minX": 1.75400436E12, "maxY": 1036.3649999999998, "series": [{"data": [[1.75400436E12, 847.24]], "isOverall": false, "label": "Criação de pedidos", "isController": false}, {"data": [[1.75400436E12, 1013.3099999999995]], "isOverall": false, "label": "Listar restaurantes", "isController": false}, {"data": [[1.75400436E12, 719.8399999999995]], "isOverall": false, "label": "Consulta de Pedidos", "isController": false}, {"data": [[1.75400436E12, 1036.3649999999998]], "isOverall": false, "label": "Login simultâneo", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75400436E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 713.9050000000001, "minX": 1.75400436E12, "maxY": 1036.3199999999997, "series": [{"data": [[1.75400436E12, 840.7650000000001]], "isOverall": false, "label": "Criação de pedidos", "isController": false}, {"data": [[1.75400436E12, 1009.0150000000007]], "isOverall": false, "label": "Listar restaurantes", "isController": false}, {"data": [[1.75400436E12, 713.9050000000001]], "isOverall": false, "label": "Consulta de Pedidos", "isController": false}, {"data": [[1.75400436E12, 1036.3199999999997]], "isOverall": false, "label": "Login simultâneo", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75400436E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.75400436E12, "maxY": 0.7200000000000004, "series": [{"data": [[1.75400436E12, 0.0]], "isOverall": false, "label": "Criação de pedidos", "isController": false}, {"data": [[1.75400436E12, 0.0]], "isOverall": false, "label": "Listar restaurantes", "isController": false}, {"data": [[1.75400436E12, 0.0]], "isOverall": false, "label": "Consulta de Pedidos", "isController": false}, {"data": [[1.75400436E12, 0.7200000000000004]], "isOverall": false, "label": "Login simultâneo", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75400436E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 23.0, "minX": 1.75400436E12, "maxY": 4251.0, "series": [{"data": [[1.75400436E12, 4251.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.75400436E12, 1952.6999999999998]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.75400436E12, 3087.020000000002]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.75400436E12, 2307.7999999999997]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.75400436E12, 23.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.75400436E12, 753.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75400436E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 56.5, "minX": 36.0, "maxY": 2178.0, "series": [{"data": [[64.0, 494.0], [68.0, 871.0], [139.0, 1007.0], [36.0, 1461.5], [40.0, 56.5], [41.0, 1941.0], [42.0, 465.0], [45.0, 1171.0], [46.0, 622.0], [97.0, 305.0], [56.0, 2178.0], [62.0, 945.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 139.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 56.0, "minX": 36.0, "maxY": 2169.5, "series": [{"data": [[64.0, 494.0], [68.0, 869.5], [139.0, 1007.0], [36.0, 1453.5], [40.0, 56.0], [41.0, 1928.0], [42.0, 460.0], [45.0, 1160.0], [46.0, 619.5], [97.0, 299.0], [56.0, 2169.5], [62.0, 940.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 139.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 13.333333333333334, "minX": 1.75400436E12, "maxY": 13.333333333333334, "series": [{"data": [[1.75400436E12, 13.333333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75400436E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.75400436E12, "maxY": 10.0, "series": [{"data": [[1.75400436E12, 10.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.75400436E12, 3.3333333333333335]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75400436E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.75400436E12, "maxY": 3.3333333333333335, "series": [{"data": [[1.75400436E12, 3.3333333333333335]], "isOverall": false, "label": "Login simultâneo-success", "isController": false}, {"data": [[1.75400436E12, 3.3333333333333335]], "isOverall": false, "label": "Listar restaurantes-success", "isController": false}, {"data": [[1.75400436E12, 3.3333333333333335]], "isOverall": false, "label": "Consulta de Pedidos-success", "isController": false}, {"data": [[1.75400436E12, 3.3333333333333335]], "isOverall": false, "label": "Criação de pedidos-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75400436E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 13.333333333333334, "minX": 1.75400436E12, "maxY": 13.333333333333334, "series": [{"data": [[1.75400436E12, 13.333333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75400436E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

